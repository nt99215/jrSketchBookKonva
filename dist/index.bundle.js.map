{"version":3,"sources":["webpack:///webpack/bootstrap ef1891af6396f3824ff2","webpack:///./src/data/GameConfig.js","webpack:///./src/manager/LayerManager.js","webpack:///./src/util/utility.js","webpack:///./src/index.js","webpack:///./src/sketchBook/SketchBookKonva.js","webpack:///./src/module/LineDraw.js","webpack:///./src/module/Brush.js","webpack:///./src/module/Airbrush.js","webpack:///./src/module/Crayon.js","webpack:///./src/module/Eraser.js","webpack:///./src/module/Zoom.js","webpack:///./src/module/Move.js","webpack:///./src/module/ClearCanvas.js","webpack:///./src/module/ScreenTone.js","webpack:///./src/module/TextInput.js","webpack:///./src/module/FloodFill.js"],"names":["_tool","_isDrawingMode","_isLineDrawing","_selectedColor","_selectedSize","_drawingHistory","_historyLimit","_defaultTension","_defaultBrushSize","_defaultLineSize","_defaultEraserSize","_defaultColor","_defaultOpacity","_mainStage","_mainDrawLayer","_currentLayer","_stageSize","width","height","GameConfig","MAIN_STAGE","obj","STAGE_SIZE","MAIN_LAYER","CURRENT_LAYER","CURRENT_TOOL","DEFAULT_TENSION","IS_DRAWING_MODE","bool","IS_LINE_DRAWING","SELECTED_COLOR","str","SELECTED_SIZE","num","push","DEFAULT_BRUSH_SIZE","DEFAULT_LINE_SIZE","DEFAULT_ERASER_SIZE","DEFAULT_COLOR","DEFAULT_OPACITY","LayerManager","init","currentLayer","img","Konva","Image","image","canvas","_canvas","add","draw","remove","stageUpdate","Utility","newCtx","document","createElement","getContext","hexToRgb","hexType","hex","replace","value","match","length","r","parseInt","g","b","a","_rgbToHex","rgbToHex","map","x","toString","join","_hexToRgb","m","substring","console","log","s","SketchBookKonva","_id","_stage","_mainLayer","$","id","getElementById","toolsOption","brushEl","airBrushEl","crayonEl","fillEl","lineEl","screenToneEl","eraserEl","textEl","zoomEl","clearEl","moveEl","colorEl","sizeEl","opacityEl","zoomSlider","brushTypeEl","eraserTypeEl","lineTypeEl","crayonTypeEl","screenToneTypeEl","_elementArr","el","Brush","Airbrush","Crayon","FloodFill","LineDraw","ScreenTone","TextInput","Eraser","Zoom","Move","ClearCanvas","constructor","layer","_init","Stage","container","_createImg","Layer","onchange","setColor","setSize","setOpacity","getOpacity","name","i","eL","o","onclick","_toolSelect","e","setLineType","_layerClear","_toolsDestroy","prototype","getColor","getSize","destroy","clear","imageURL","fromURL","_drawLayer","_this","isPaint","_line","_dashEnabled","_color","_size","_opacity","_dashConfigArr","_lineType","stage","useTool","on","pos","getPointerPosition","Line","points","y","lineCap","opacity","stroke","strokeWidth","dashEnabled","dash","getLineType","oldPoints","off","color","size","pop","type","target","substr","_typeConfigArr","_img","_brushType","_clone","_shapeEnable","_imgObj","w","h","_angleRatio","_lineCap","convertJson","json","toJSON","isDrawing","currentLine","evt","getRelativePointerPosition","globalCompositeOperation","getLineCap","tension","newPoints","concat","Rect","rotation","fill","cache","imageDraw","batchDraw","downloadURI","uri","link","download","href","body","appendChild","click","removeChild","node","transform","getAbsoluteTransform","copy","invert","getStage","point","clone","setLineCap","angle","Math","random","PI","radius","xPos","cos","yPos","sin","c","rect","perfectDrawEnabled","listening","_pattern","_crayonType","_imgSrc","getCrayonImage","attrs","filters","Filters","RGBA","red","green","blue","onload","src","_mode","_currentNum","_lineArr","drawLayer","_defaultViewPort","_minimumViewPort","_maximumViewPort","_currentViewPort","_zoomScale","_zoomScope","sizeSetMouse","preventDefault","oldScale","indexOf","scaleX","newScale","scaleModify","scale","draggable","canvasClear","_patternImage","_patternGroup","_fillRect","_patternType","_patterUrl","Group","fillPatternImage","url","_textarea","_textNode","_defaultText","_fontFamily","ff","Text","fontSize","fontFamily","stageBox","getContainer","getBoundingClientRect","areaPosition","left","top","text","style","position","focus","addEventListener","updateValue","textInput","g_imgData","g_canvasWidth","g_targetColor","FloodFillBack","paintAt","ctx","targetColor","startX","startY","context","_context","getImageData","pixelPos","data","floodFill","putImageData","startR","startG","startB","startA","canvasWidth","newPos","reachLeft","reachRight","drawingBoundLeft","drawingBoundTop","drawingBoundRight","drawingBoundBottom","pixelStack","matchStartColor","colorPixel","arr","sampleDrawImage","beginPath","fillStyle","fillRect","closePath"],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ef1891af6396f3824ff2","let _tool = null;\r\nlet _isDrawingMode = false;\r\nlet _isLineDrawing = false;\r\nlet _selectedColor = '';\r\nlet _selectedSize = 0;\r\nlet _drawingHistory = [];\r\nconst _historyLimit = 30;\r\n\r\nconst _defaultTension = 0.3;\r\nconst _defaultBrushSize = 10;\r\nconst _defaultLineSize = 15;\r\nconst _defaultEraserSize = 15;\r\nconst _defaultColor = '#000000';\r\nconst _defaultOpacity = 100;\r\n\r\nlet _mainStage = null;\r\nlet _mainDrawLayer = null;\r\nlet _currentLayer = null;\r\nlet _stageSize = {width:810, height:700}\r\n\r\nexport default class GameConfig {\r\n\r\n    static get MAIN_STAGE() { return _mainStage};\r\n    static set MAIN_STAGE(obj) { _mainStage = obj};\r\n\r\n    static get STAGE_SIZE() { return _stageSize};\r\n    static set STAGE_SIZE(obj) { _stageSize = obj};\r\n\r\n    static get MAIN_LAYER() { return _mainDrawLayer};\r\n    static set MAIN_LAYER(obj) { _mainDrawLayer = obj};\r\n\r\n    static get CURRENT_LAYER() { return _currentLayer};\r\n    static set CURRENT_LAYER(obj) { _currentLayer = obj};\r\n\r\n    static get CURRENT_TOOL() { return _tool};\r\n    static set CURRENT_TOOL(obj) { _tool = obj};\r\n\r\n    static get DEFAULT_TENSION() { return _defaultTension};\r\n\r\n    static get IS_DRAWING_MODE() { return _isDrawingMode};\r\n    static set IS_DRAWING_MODE(bool) { _isDrawingMode = bool};\r\n\r\n    static get IS_LINE_DRAWING() { return _isLineDrawing};\r\n    static set IS_LINE_DRAWING(bool) { _isLineDrawing = bool};\r\n\r\n    static get SELECTED_COLOR() { return _selectedColor};\r\n    static set SELECTED_COLOR(str) { _selectedColor = str};\r\n\r\n    static get SELECTED_SIZE() { return _selectedSize};\r\n    static set SELECTED_SIZE(num) { _selectedSize = num}\r\n\r\n    static get SELECTED_SIZE() { return _drawingHistory};\r\n    static set SELECTED_SIZE(obj) { _drawingHistory.push(obj)};\r\n\r\n    static get DEFAULT_BRUSH_SIZE() { return _defaultBrushSize};\r\n    static get DEFAULT_LINE_SIZE() { return _defaultLineSize};\r\n    static get DEFAULT_ERASER_SIZE() { return _defaultEraserSize};\r\n    static get DEFAULT_COLOR() { return _defaultColor};\r\n    static get DEFAULT_OPACITY() { return _defaultOpacity};\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/GameConfig.js","import GameConfig from \"../data/GameConfig\";\r\n\r\nexport default class LayerManager {\r\n        init(currentLayer) {\r\n        if(currentLayer === GameConfig.MAIN_LAYER)\r\n        return;\r\n        let _currentLayer = currentLayer;\r\n        let img = new Konva.Image({\r\n                image:_currentLayer.canvas._canvas,\r\n                width:GameConfig.STAGE_SIZE.width,\r\n                height:GameConfig.STAGE_SIZE.height\r\n        });\r\n        GameConfig.MAIN_LAYER.add(img);\r\n        GameConfig.MAIN_LAYER.draw();\r\n        // _currentLayer.destroy();\r\n        GameConfig.MAIN_STAGE.remove(_currentLayer);\r\n        // _currentLayer.clear();\r\n        _currentLayer.remove();\r\n        _currentLayer = null;\r\n        // console.log(\"GameConfig.MAIN_LAYER\", GameConfig.MAIN_LAYER);\r\n    }\r\n\r\n    stageUpdate() {\r\n        /* const scale = 1 / 4;\r\n         const url = _stage.toDataURL({ pixelRatio: scale });\r\n         document.getElementById('preview').src = url;*/\r\n\r\n        // let dataUrl = _drawLayer.toDataURL();\r\n        // this.downloadURI(dataUrl, 'stage.png');\r\n        // let json = _stage.toJSON();\r\n        // console.log(json);\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/manager/LayerManager.js","export default class Utility {\r\n\r\n    static newCtx(width, height) {\r\n        let canvas = document.createElement(\"canvas\");\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        return canvas.getContext(\"2d\");\r\n    }\r\n\r\n    static hexToRgb(hexType) {\r\n        let hex = hexType.replace( \"#\", \"\" );\r\n        let value = hex.match( /[a-f\\d]/gi );\r\n\r\n        // 헥사값이 세자리일 경우, 여섯자리로.\r\n        if ( value.length == 3 ) hex = value[0] + value[0] + value[1] + value[1] + value[2] + value[2];\r\n\r\n        value = hex.match( /[a-f\\d]{2}/gi );\r\n        let r = parseInt( value[0], 16 );\r\n        let g = parseInt( value[1], 16 );\r\n        let b = parseInt( value[2], 16 );\r\n\r\n        return {\r\n            r, g, b, a: 255\r\n        };\r\n    }\r\n\r\n    _rgbToHex(r,g,b) {\r\n\r\n        let rgbToHex = (r, g, b) => '#' + [r, g, b].map(x => {\r\n            const hex = x.toString(16)\r\n            return hex.length === 1 ? '0' + hex : hex\r\n        }).join('');\r\n\r\n        // console.log(rgbToHex)\r\n    }\r\n\r\n    _hexToRgb(hex) {\r\n        hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i\r\n            ,(m, r, g, b) => '#' + r + r + g + g + b + b)\r\n            .substring(1).match(/.{2}/g)\r\n            .map(x => parseInt(x, 16))\r\n\r\n        console.log(hex);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/utility.js","import SketchBookKonva from \"./sketchBook/SketchBookKonva\";\r\nlet s = new SketchBookKonva('container');\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import LineDraw from \"../module/LineDraw\";\r\nimport Brush from \"../module/Brush\";\r\nimport GameConfig from \"../data/GameConfig\";\r\nimport Airbrush from \"../module/Airbrush\";\r\nimport Crayon from \"../module/Crayon\";\r\nimport Eraser from \"../module/Eraser\";\r\nimport Zoom from \"../module/Zoom\";\r\nimport Move from \"../module/Move\";\r\nimport ClearCanvas from \"../module/ClearCanvas\";\r\nimport ScreenTone from \"../module/ScreenTone\";\r\nimport TextInput from \"../module/TextInput\";\r\nimport FloodFill from \"../module/FloodFill\";\r\n\r\nlet _id, _stage, _mainLayer;\r\n\r\nlet $ = function(id){return document.getElementById(id)};\r\nlet toolsOption = $('toolsOption'),\r\n    brushEl = $('brush'),\r\n    airBrushEl = $('airBrush'),\r\n    crayonEl = $('crayon'),\r\n    fillEl = $('fill'),\r\n    lineEl = $('line'),\r\n    screenToneEl = $('screenTone'),\r\n    eraserEl = $('eraser'),\r\n    textEl = $('text'),\r\n    zoomEl= $('zoom'),\r\n    // moveEl = $('move'),\r\n    clearEl = $('clear'),\r\n    moveEl = $('move'),\r\n\r\n    //tools Property\r\n    colorEl = $('_color'),\r\n    sizeEl = $('_size'),\r\n    opacityEl = $('_opacity'),\r\n    zoomSlider = $('_zoom'),\r\n\r\n\r\n    /**\r\n     * TOOLS TYPE\r\n     * @type {HTMLElement | jQuery | HTMLElement}\r\n     */\r\n        //BRUSH TYPE\r\n    brushTypeEl = $('brushType'),\r\n\r\n    //ERASER TYPE\r\n    eraserTypeEl = $('EraserType'),\r\n\r\n    //LINE TYPE\r\n    lineTypeEl = $('lineType'),\r\n\r\n    //CRAYON TYPE\r\n    crayonTypeEl = $('crayonType'),\r\n\r\n    //SCREEN_TONE TYPE\r\n    screenToneTypeEl = $('screenToneType')\r\n\r\nlet _elementArr = [\r\n    {el:brushEl, obj:Brush},\r\n    {el:airBrushEl, obj:Airbrush},\r\n    {el:crayonEl, obj:Crayon},\r\n    {el:fillEl, obj:FloodFill},\r\n    {el:lineEl, obj:LineDraw},\r\n    {el:screenToneEl, obj:ScreenTone},\r\n    {el:textEl, obj:TextInput},\r\n    {el:eraserEl, obj:Eraser},\r\n    {el:zoomEl, obj:Zoom},\r\n    {el:moveEl, obj:Move},\r\n    {el:clearEl, obj:ClearCanvas},\r\n]\r\n\r\nexport default class SketchBookKonva {\r\n    constructor(id, width, height, layer = 1) {\r\n        _id = id;\r\n        this._init();\r\n    }\r\n\r\n    _init() {\r\n\r\n        _stage = new Konva.Stage({\r\n            container: 'container',\r\n            width:GameConfig.STAGE_SIZE.width,\r\n            height:GameConfig.STAGE_SIZE.height\r\n        });\r\n\r\n        GameConfig.MAIN_STAGE = _stage;\r\n\r\n        this._createImg();\r\n\r\n        _mainLayer = new Konva.Layer();\r\n        GameConfig.MAIN_LAYER = _mainLayer;\r\n        _stage.add(_mainLayer);\r\n\r\n        colorEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setColor(this.value);\r\n        }\r\n\r\n        sizeEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setSize(this.value);\r\n        }\r\n\r\n        opacityEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL)\r\n            {\r\n                GameConfig.CURRENT_TOOL.setOpacity(this.value);\r\n                GameConfig.CURRENT_TOOL.getOpacity();\r\n            }\r\n        }\r\n\r\n        zoomSlider.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL.constructor.name === 'Zoom')\r\n                GameConfig.CURRENT_TOOL.setSize(this.value);\r\n        }\r\n\r\n\r\n        /**TOOLS SELECT\r\n         *\r\n         */\r\n        for(let i in _elementArr)\r\n        {\r\n            let eL = _elementArr[i].el;\r\n            let o =  _elementArr[i].obj;\r\n            eL.onclick =()=> this._toolSelect(eL.id, o);\r\n        }\r\n\r\n        /**\r\n         * BRUSH STYLE\r\n         */\r\n        brushTypeEl.onchange = function(e) {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setLineType(e);\r\n        }\r\n\r\n        /**\r\n         * LINE STYLE\r\n         */\r\n        lineTypeEl.onchange = function(e) {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setLineType(e);\r\n        }\r\n\r\n        /**\r\n         * CRAYON STYLE\r\n         */\r\n        crayonTypeEl.onchange = function(e) {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setLineType(e);\r\n        }\r\n\r\n        /**\r\n         * CRAYON STYLE\r\n         */\r\n        screenToneTypeEl.onchange = function(e) {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setLineType(e);\r\n        }\r\n\r\n        this._toolSelect();\r\n\r\n    }\r\n\r\n\r\n    _toolSelect(id = '', obj =  Brush) {\r\n        // toolsOption.style.display = 'none';\r\n        // brushTypeEl.style.display = '';\r\n\r\n        if(id === 'clear')\r\n        {\r\n            this._layerClear();\r\n            return;\r\n        }\r\n        this._toolsDestroy();\r\n\r\n        if(id === 'zoom' || id === 'move')\r\n        {\r\n            GameConfig.IS_DRAWING_MODE = false;\r\n            obj.prototype.init(_stage);\r\n            return;\r\n        }\r\n\r\n\r\n        GameConfig.IS_DRAWING_MODE = true;\r\n        // this._toolsDestroy();\r\n\r\n        if(id === 'eraser') {\r\n            GameConfig.IS_DRAWING_MODE = false;\r\n            obj.prototype.init(_stage, _mainLayer);\r\n            return;\r\n        }\r\n        else obj.prototype.init(_stage);\r\n\r\n\r\n        colorEl.value = obj.prototype.getColor();\r\n        sizeEl.value = obj.prototype.getSize();\r\n        opacityEl.value = obj.prototype.getOpacity();\r\n\r\n    }\r\n\r\n    _layerClear() {\r\n        _stage.remove(GameConfig.MAIN_LAYER);\r\n        // GameConfig.MAIN_LAYER.clear();\r\n        if(GameConfig.MAIN_LAYER)\r\n        {\r\n            GameConfig.MAIN_LAYER.remove();\r\n            GameConfig.MAIN_LAYER.destroy();\r\n            GameConfig.MAIN_LAYER = null;\r\n        }\r\n        if(GameConfig.CURRENT_LAYER)\r\n        {\r\n            _stage.remove(GameConfig.CURRENT_LAYER);\r\n            GameConfig.CURRENT_LAYER.clear();\r\n            GameConfig.CURRENT_LAYER.remove();\r\n            GameConfig.CURRENT_LAYER.destroy();\r\n            GameConfig.CURRENT_LAYER = null;\r\n        }\r\n        _mainLayer = new Konva.Layer();\r\n        _stage.add(_mainLayer);\r\n        GameConfig.MAIN_LAYER = _mainLayer;\r\n        _mainLayer.draw();\r\n    }\r\n\r\n\r\n\r\n    _createImg() {\r\n        const imageURL = 'asset/image/sampleImg.jpg';\r\n        const layer = new Konva.Layer();\r\n        Konva.Image.fromURL(imageURL, (image)=>{\r\n\r\n            layer.add(image);\r\n            layer.draw();\r\n        });\r\n        // _stage.add(layer);\r\n\r\n    }\r\n\r\n\r\n    _toolsDestroy() {\r\n        if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.destroy();\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/sketchBook/SketchBookKonva.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this, isPaint, _line, _dashEnabled;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\nconst _dashConfigArr = [[0], [0, 0, 30], [0, 30]];\r\nlet _lineType = _dashConfigArr[0];\r\n\r\nexport default class LineDraw {\r\n\r\n    init(stage) {\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer();\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n        _dashEnabled = false;\r\n\r\n        this.useTool();\r\n    }\r\n\r\n    useTool() {\r\n        _stage.on('mousedown touchstart', function () {\r\n            isPaint = true;\r\n            let pos = _stage.getPointerPosition();\r\n\r\n            _line = new Konva.Line({\r\n                points: [pos.x, pos.y, pos.x, pos.y],\r\n                // pointerLength: 20,\r\n                // pointerWidth: 20,\r\n                lineCap:'round',\r\n                opacity:_this.getOpacity() / 100,\r\n                stroke: _this.getColor(),\r\n                strokeWidth: _this.getSize(),\r\n                dashEnabled: _dashEnabled,\r\n                dash:_this.getLineType()\r\n            });\r\n            _drawLayer.add(_line);\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', function () {\r\n            isPaint = false;\r\n            LayerManager.prototype.init(_drawLayer);\r\n            _drawLayer = new Konva.Layer();\r\n            _stage.add(_drawLayer);\r\n            GameConfig.CURRENT_LAYER = _drawLayer;\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', function () {\r\n\r\n            // if(!GameConfig.IS_LINE_DRAWING || !isPaint) return;\r\n            if(!isPaint) return;\r\n\r\n            let pos = _stage.getPointerPosition();\r\n            let oldPoints = _line.points();\r\n            _line.points([oldPoints[0], oldPoints[1], pos.x, pos.y])\r\n            _drawLayer.draw();\r\n        });\r\n    }\r\n\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        isPaint = false;\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) {\r\n        _size = size;\r\n        _lineType.pop();\r\n        _lineType.push(_size * 2);\r\n    }\r\n    getSize() {return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    /**\r\n     *\r\n     * @param lineType\r\n     */\r\n    setLineType(e) {\r\n        let type = e.target.id.substr(1, e.target.name.length + 1);\r\n        switch (type)\r\n        {\r\n            case 'stroke' :\r\n                _lineType = [0];\r\n                break;\r\n            case 'dot' :\r\n                _lineType = [0, this.getSize() * 2];\r\n                break;\r\n            case 'dash' :\r\n                _lineType = [0, 0, this.getSize() * 2];\r\n                break;\r\n            default :\r\n                _lineType = [0];\r\n                break;\r\n        }\r\n        _dashEnabled = type !== 'stroke';\r\n    }\r\n\r\n    getLineType() {return _lineType;}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/LineDraw.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\nconst _typeConfigArr = [[0,0], [0, 0, 15], [0, 10]];\r\nlet _img, _brushType,_clone, _shapeEnable;\r\nconst _imgObj = {w:0, h:0, r:0};\r\nconst _angleRatio = 4;\r\nlet _lineCap = 'round';\r\n\r\n\r\nexport default class Brush {\r\n\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer();\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n        _shapeEnable = false;\r\n\r\n        this.useTool();\r\n        // this.convertJson();\r\n    }\r\n\r\n\r\n    convertJson(){\r\n       /* var width = window.innerWidth;\r\n        var height = window.innerHeight;\r\n\r\n        var stage = new Konva.Stage({\r\n            container: 'container',\r\n            width: width,\r\n            height: height,\r\n        });\r\n        var layer = new Konva.Layer();\r\n\r\n        var hexagon = new Konva.RegularPolygon({\r\n            x: width / 2,\r\n            y: height / 2,\r\n            sides: 6,\r\n            radius: 70,\r\n            fill: 'red',\r\n            stroke: 'black',\r\n            strokeWidth: 4,\r\n        });\r\n\r\n        // add the shape to the layer\r\n        layer.add(hexagon);\r\n\r\n        // add the layer to the stage\r\n        stage.add(layer);*/\r\n\r\n        // save stage as a json string\r\n        var json = _stage.toJSON();\r\n\r\n        console.log(json);\r\n\r\n    }\r\n\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n        let currentLine;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            // Start drawing\r\n            isDrawing = true;\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            if(! _shapeEnable)\r\n            {\r\n                currentLine = new Konva.Line({\r\n                    stroke: _this.getColor(),\r\n                    strokeWidth: _this.getSize(),\r\n                    points: [pos.x, pos.y],\r\n                    globalCompositeOperation:'source-over',\r\n                    // globalCompositeOperation:'destination-out',\r\n                    // lineCap:'square',\r\n                    lineCap:_this.getLineCap(),\r\n                    tension:GameConfig.DEFAULT_TENSION,\r\n                    // fill:'#ffcc00',\r\n                    // fillPatternImage:'asset/image/starImg.png',\r\n                    // fillEnabled:true,\r\n                    opacity:_this.getOpacity() / 100\r\n                });\r\n\r\n                _drawLayer.add(currentLine);\r\n            }\r\n\r\n            else currentLine = {points:[pos.x, pos.y]}\r\n\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', (evt) => {\r\n            if (!isDrawing) return;\r\n\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            if(! _shapeEnable)\r\n            {\r\n\r\n                let newPoints = currentLine.points().concat([pos.x, pos.y]);\r\n                currentLine.points(newPoints);\r\n            }\r\n\r\n            else\r\n            {\r\n                let obj = _imgObj;\r\n                _img = new Konva.Rect({\r\n                    // width:_this.getSize(),\r\n                    // height:_this.getSize(),\r\n                    width:parseInt(obj.w  * this.getSize()),\r\n                    height:parseInt(obj.h * this.getSize()),\r\n                    rotation:obj.r,\r\n                    fill:_this.getColor(),\r\n                })\r\n\r\n                _img.cache();\r\n                this.imageDraw(pos.x, pos.y);\r\n            }\r\n            _drawLayer.batchDraw();\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            isDrawing = false;\r\n\r\n            LayerManager.prototype.init(_drawLayer);\r\n            _drawLayer = new Konva.Layer();\r\n            _stage.add(_drawLayer);\r\n            GameConfig.CURRENT_LAYER = _drawLayer;\r\n\r\n        });\r\n    }\r\n\r\n    downloadURI(uri, name) {\r\n        let link = document.createElement('a');\r\n        link.download = name;\r\n        link.href = uri;\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        // delete link;\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        transform.invert();\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n\r\n    imageDraw(x, y) {\r\n        _clone = _img.clone({\r\n            x:x,\r\n            y:y,\r\n            // width:_img.scale.x * 20,\r\n            // height:10,\r\n            fill:_this.getColor(),\r\n        });\r\n\r\n        _clone.cache();\r\n        _drawLayer.add(_clone);\r\n    }\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n\r\n        // console.log('brush', _drawLayer);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    /**\r\n     *\r\n     * @param lineCap\r\n     */\r\n    setLineCap(str) { _lineCap = str;}\r\n    getLineCap() { return _lineCap;}\r\n\r\n    /**\r\n     *\r\n     * @param linType\r\n     */\r\n    setLineType(e) {\r\n        let type = e.target.id.substr(1, e.target.name.length + 1);\r\n        switch (type)\r\n        {\r\n            case 'circle' :\r\n                this.setLineCap('round');\r\n                _shapeEnable = false;\r\n                break;\r\n            case 'rect' :\r\n                this.setLineCap('square');\r\n                _shapeEnable = false;\r\n                break;\r\n            case 'diamond' :\r\n                _imgObj.w = 1;\r\n                _imgObj.h = 1;\r\n                _imgObj.r = 45;\r\n                _shapeEnable = true;\r\n                break;\r\n            case 'column' :\r\n                _imgObj.w = 1/_angleRatio;\r\n                _imgObj.h = 1;\r\n                _imgObj.r = 0;\r\n                _shapeEnable = true;\r\n                break;\r\n            case 'row' :\r\n                _imgObj.w = 1;\r\n                _imgObj.h = 1/_angleRatio;\r\n                _imgObj.r = 0;\r\n                _shapeEnable = true;\r\n                break;\r\n            case 'slash' :\r\n                _imgObj.w = 1;\r\n                _imgObj.h = 1/_angleRatio;\r\n                _imgObj.r = -35;\r\n                _shapeEnable = true;\r\n                break;\r\n\r\n        }\r\n    }\r\n    getLineType() { return _brushType;}\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Brush.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\n\r\n\r\nexport default class Airbrush {\r\n\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer();\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n\r\n        this.useTool();\r\n    }\r\n\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n        let currentLine;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            // Start drawing\r\n            isDrawing = true;\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            currentLine = {points:[pos.x, pos.y]}\r\n            // _drawLayer.add(currentLine);\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            if (!isDrawing) {\r\n                return;\r\n            }\r\n\r\n            // If drawing, add new point to the current line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            // let newPoints = currentLine.points().concat([pos.x, pos.y]);\r\n            // currentLine.points(newPoints);\r\n            this.imageDraw(pos.x, pos.y);\r\n\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            isDrawing = false;\r\n            LayerManager.prototype.init(_drawLayer);\r\n            _drawLayer = new Konva.Layer();\r\n            _stage.add(_drawLayer);\r\n            GameConfig.CURRENT_LAYER = _drawLayer;\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        transform.invert();\r\n\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n\r\n    imageDraw(x, y) {\r\n\r\n        let angle = Math.random() * Math.PI * 2;\r\n        let radius = Math.random() * this.getSize() / 2;\r\n        let xPos = x + Math.cos(angle) * radius;\r\n        let yPos = y + Math.sin(angle) * radius;\r\n        let c = this.getColor();\r\n        let r = (Math.random() * 10)/5;\r\n        for(let  i = 0; i<3; i++)\r\n        {\r\n            let rect = new Konva.Rect({\r\n                x:xPos,\r\n                y:yPos,\r\n                width:r,\r\n                height:r,\r\n                fill: c,\r\n                perfectDrawEnabled:false,\r\n                listening:false\r\n            });\r\n            _drawLayer.add(rect);\r\n            _drawLayer.batchDraw();\r\n        }\r\n\r\n    }\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Airbrush.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\nimport Utility from \"../util/utility\";\r\n\r\nlet _stage, _drawLayer, _this,_pattern, _clone;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE * 2;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\nlet _crayonType = 0;\r\nlet _imgSrc = [\r\n    'asset/image/pattern/crayon0/pattern_0.png',\r\n    'asset/image/pattern/crayon1/pattern_1.png',\r\n    'asset/image/pattern/crayon2/pattern_2.png'];\r\n\r\n\r\nexport default class Crayon {\r\n\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer();\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n\r\n        this.getCrayonImage();\r\n        this.useTool();\r\n    }\r\n\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n        let currentLine;\r\n\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            // Start drawing\r\n            isDrawing = true;\r\n\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            currentLine = {points:[pos.x, pos.y]}\r\n            this.getSize();\r\n            this.getColor();\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', (evt) => {\r\n            if (!isDrawing) return;\r\n\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            this.imageDraw(pos.x, pos.y);\r\n            _drawLayer.batchDraw();\r\n\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            isDrawing = false;\r\n            LayerManager.prototype.init(_drawLayer);\r\n            _drawLayer = new Konva.Layer();\r\n            _stage.add(_drawLayer);\r\n            GameConfig.CURRENT_LAYER = _drawLayer;\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        // transform.invert();\r\n\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n\r\n    imageDraw(x, y) {\r\n\r\n        let obj = _pattern.attrs.image;\r\n        _clone = _pattern.clone({\r\n            x:x - obj.width/2,\r\n            y:y - obj.height/2,\r\n        });\r\n        _clone.cache();\r\n        _drawLayer.add(_clone);\r\n    }\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) {_color = color;}\r\n    getColor() {\r\n        let c = Utility.hexToRgb(_color);\r\n        _pattern.filters([Konva.Filters.RGBA]);\r\n        _pattern.red(c.r);\r\n        _pattern.green(c.g);\r\n        _pattern.blue(c.b);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size * 2;}\r\n    getSize() {\r\n        let obj = _pattern.attrs.image;\r\n        obj.width = _size;\r\n        obj.height = _size;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    /**\r\n     *\r\n     * @param lineType\r\n     */\r\n    setLineType(e) {\r\n        let type = e.target.id.substr(1, e.target.name.length + 1);\r\n        switch (type)\r\n        {\r\n            case 'cA' :\r\n                _crayonType = 0;\r\n                break;\r\n            case 'cB' :\r\n                _crayonType = 1;\r\n                break;\r\n            case 'cC' :\r\n                _crayonType = 2\r\n                break;\r\n            default :\r\n                _crayonType = 0;\r\n                break;\r\n        }\r\n        this.getCrayonImage();\r\n    }\r\n\r\n    getLineType() {return _crayonType;}\r\n\r\n    getCrayonImage() {\r\n        _pattern = new Image();\r\n        _pattern.onload =()=> {\r\n            let img = new Konva.Image({\r\n                image:_pattern,\r\n            });\r\n            _pattern = img;\r\n            _pattern.cache();\r\n        }\r\n        _pattern.src = _imgSrc[this.getLineType()];\r\n    }\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Crayon.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _this, _mode, _currentNum, _drawLayer, isDrawing, _lineCap;\r\nlet _lineArr = [];\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\n\r\nexport default class Eraser {\r\n\r\n\r\n    init(stage, drawLayer) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = drawLayer;\r\n        _this = this;\r\n\r\n        // _stage.add(_drawLayer);\r\n        this.useTool();\r\n\r\n    }\r\n\r\n    useTool () {\r\n        isDrawing = false;\r\n        let currentLine;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // Start drawing\r\n            isDrawing = true;\r\n            // Create new line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            currentLine = new Konva.Line({\r\n                stroke: _this.getColor(),\r\n                strokeWidth: _this.getSize(),\r\n                points: [pos.x, pos.y],\r\n                lineCap:'round',\r\n                tension:GameConfig.DEFAULT_TENSION,\r\n                opacity:_this.getOpacity() / 100,\r\n                globalCompositeOperation:'destination-out'\r\n            });\r\n            _drawLayer.add(currentLine);\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', () => {\r\n            if (!isDrawing) {\r\n                return;\r\n            }\r\n\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            let newPoints = currentLine.points().concat([pos.x, pos.y]);\r\n            currentLine.points(newPoints);\r\n            _drawLayer.batchDraw();\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            isDrawing = false;\r\n            /*LayerManager.prototype.init(_drawLayer);\r\n            _drawLayer = new Konva.Layer();\r\n            _stage.add(_drawLayer);\r\n            GameConfig.CURRENT_LAYER = _drawLayer;*/\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        transform.invert();\r\n        let pos = node.getStage().getPointerPosition();\r\n        return transform.point(pos);\r\n    }\r\n\r\n    destroy() {\r\n        // console.log(\"eraseEND\")\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    /**\r\n     *\r\n     * @param lineCap\r\n     */\r\n    setLineCap(str) { _lineCap = str;}\r\n    getLineCap() { return _lineCap;}\r\n\r\n\r\n    /**\r\n     *\r\n     * @param linType\r\n     */\r\n    setLineType(str) {}\r\n    getLineType(str) {}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Eraser.js","import GameConfig from \"../data/GameConfig\";\r\n\r\nconst _defaultViewPort = 1;\r\nconst _minimumViewPort = 50;\r\nconst _maximumViewPort = 200;\r\nlet _currentViewPort = 100;\r\nlet _stage, _drawLayer, _this;\r\nconst _zoomScale = [0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.25, 1.5, 1.75, 2];\r\nlet _zoomScope = 1;\r\n\r\nexport default class Zoom {\r\n\r\n    init(stage, drawLayer) {\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = drawLayer;\r\n        _this = this;\r\n        this.sizeSetMouse();\r\n    }\r\n\r\n    sizeSetMouse() {\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            evt.evt.preventDefault();\r\n            let oldScale = _zoomScale.indexOf(_stage.scaleX());\r\n            if(oldScale === _zoomScale.length - 1 || oldScale === 0) _zoomScope = -_zoomScope;\r\n            let newScale = _zoomScale[oldScale + _zoomScope];\r\n            this.scaleModify(newScale)\r\n            /*_stage.scale({x: newScale, y: newScale});\r\n              let mousePointTo = {\r\n                  x: _stage.getPointerPosition().x / oldScale - _stage.x() / oldScale,\r\n                  y: _stage.getPointerPosition().y / oldScale - _stage.y() / oldScale\r\n              };\r\n              let newPos = {\r\n                  x: -(mousePointTo.x - _stage.getPointerPosition().x / newScale) * newScale,\r\n                  y: -(mousePointTo.y - _stage.getPointerPosition().y / newScale) * newScale\r\n              };\r\n              console.log(mousePointTo, newPos, newScale)\r\n              _stage.position(newPos);*/\r\n        });\r\n    }\r\n\r\n    scaleModify(scale) {\r\n        _stage.scale({x: scale, y:scale})\r\n        _stage.draw();\r\n\r\n    }\r\n\r\n    destroy() {\r\n        if(_stage) _stage.off('mousedown touchstart');\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(point) {\r\n      /*  console.log(point)\r\n        if(_currentViewPort >= _minimumViewPort && _currentViewPort <= _maximumViewPort)\r\n        _currentViewPort = point;*/\r\n        _currentViewPort = point/100;\r\n        this.scaleModify(this.getSize());\r\n    }\r\n    getSize() { return _currentViewPort;}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Zoom.js","import GameConfig from \"../data/GameConfig\";\r\n\r\nlet _stage;\r\nexport default class Move {\r\n\r\n    init (stage) {\r\n        GameConfig.CURRENT_TOOL = this;\r\n        GameConfig.IS_DRAWING_MODE = false;\r\n        _stage = stage;\r\n        _stage.draggable(true);\r\n    }\r\n\r\n    destroy () {\r\n        if(_stage)_stage.draggable(false);\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Move.js","export default class ClearCanvas {\r\n    canvasClear(canvas) {\r\n        // alert(\"are you sure?\");\r\n        canvas.clear();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/ClearCanvas.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this, _patternImage, _patternGroup, _fillRect;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\nlet _lineCap = 'round';\r\nlet _patternType = 'A';\r\nconst _patterUrl = 'asset/image/screenTone/screenToneType';\r\n\r\n\r\n\r\nexport default class Brush {\r\n\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer();\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n        this.useTool();\r\n\r\n    }\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n        let currentLine;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n\r\n            _patternImage = new Image();\r\n            // _patternImage.src = 'asset/image/screenTone/screenToneTypeA.png';\r\n            _patternImage.src = this.getLineType();\r\n            _patternImage.onload = () => {\r\n                _patternGroup = new Konva.Group();\r\n                _drawLayer.add(_patternGroup);\r\n\r\n                currentLine = new Konva.Line({\r\n                    stroke: _this.getColor(),\r\n                    strokeWidth: _this.getSize(),\r\n                    points: [pos.x, pos.y],\r\n                    lineCap:_this.getLineCap(),\r\n                    tension:GameConfig.DEFAULT_TENSION,\r\n                    fill:'#ffcc00',\r\n                    opacity:_this.getOpacity() / 100\r\n                });\r\n\r\n                _fillRect = new Konva.Rect({\r\n                    x:0,\r\n                    y:0,\r\n                    width:800,\r\n                    height:550,\r\n                    fillPatternImage: _patternImage,\r\n                    globalCompositeOperation: 'source-in'\r\n                });\r\n\r\n                isDrawing = true;\r\n            };\r\n\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', (evt) => {\r\n            if (!isDrawing) return;\r\n\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            let newPoints = currentLine.points().concat([pos.x, pos.y]);\r\n            currentLine.points(newPoints);\r\n\r\n            _patternGroup.add(currentLine);\r\n            _drawLayer.add(_fillRect);\r\n            _drawLayer.batchDraw();\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            isDrawing = false;\r\n            LayerManager.prototype.init(_drawLayer);\r\n            _drawLayer = new Konva.Layer();\r\n            _stage.add(_drawLayer);\r\n            GameConfig.CURRENT_LAYER = _drawLayer;\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        transform.invert();\r\n        let pos = node.getStage().getPointerPosition();\r\n        return transform.point(pos);\r\n    }\r\n\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    /**\r\n     *\r\n     * @param lineCap\r\n     */\r\n    setLineCap(str) { _lineCap = str;}\r\n    getLineCap() { return _lineCap;}\r\n\r\n    /**\r\n     *\r\n     * @param linType\r\n     */\r\n    setLineType(e) {\r\n        let type = e.target.id.substr(2, e.target.name.length + 1);\r\n        _patternType = type;\r\n    }\r\n    getLineType() {\r\n        let url = _patterUrl + _patternType + '.png';\r\n        return url;\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/ScreenTone.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this, _textarea, _textNode;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\nconst _defaultText = '글을 입력하세요';\r\n// const _defaultText = '글을';\r\nconst _fontFamily = [\r\n    'Nanum Brush Script',\r\n    'Nanum Pen Script',\r\n    'NanumBarunGothic',\r\n    'NanumBarunGothic YetHangul',\r\n    'NanumBarunpen',\r\n    'NanumGothic',\r\n    'NanumGothic Eco',\r\n    'NanumGothicCoding',\r\n    'NanumMyeongjo',\r\n    'NanumMyeongjo Eco',\r\n    'NanumMyeongjo YetHangul',\r\n    'NanumSquare',\r\n    'NanumSquare_ac',\r\n    'NanumSquareRound',\r\n]\r\n\r\nexport default class TextInput {\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer();\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n\r\n        this.useTool();\r\n    }\r\n\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            isDrawing = !isDrawing;\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            let ff = _fontFamily[0];\r\n            if(isDrawing)\r\n            {\r\n                _textNode = new Konva.Text({\r\n                    // text: _defaultText,\r\n                    x: pos.x,\r\n                    y: pos.y,\r\n                    fontSize: this.getSize(),\r\n                    fontFamily: ff,\r\n                    fill: this.getColor()\r\n                });\r\n\r\n                _drawLayer.add(_textNode);\r\n\r\n                let stageBox = _stage.getContainer().getBoundingClientRect();\r\n                let areaPosition = {\r\n                    x: pos.x + stageBox.left,\r\n                    y: pos.y + stageBox.top\r\n                };\r\n\r\n                _textarea = document.createElement('textarea');\r\n                document.body.appendChild(_textarea);\r\n\r\n                _textarea.value = _textNode.text();\r\n                _textarea.style.position = 'absolute';\r\n                _textarea.style.top = areaPosition.y + 'px';\r\n                _textarea.style.left = areaPosition.x + 'px';\r\n                // _textarea.style.width = _textNode.width() + 'px';\r\n                _textarea.style.width = '30px';\r\n                _textarea.style.height = _textNode.height() + 'px';\r\n                _textarea.focus();\r\n                _textarea.addEventListener('input', this.updateValue);\r\n\r\n            }\r\n            else\r\n            {\r\n                // _textNode.text(_textarea.value);\r\n                document.body.removeChild(_textarea);\r\n                // _drawLayer.add(_textNode);\r\n                // _drawLayer.draw();\r\n            }\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n    updateValue() {\r\n\r\n        // _textNode.text(_textarea.value);\r\n        // _textarea.style.position = 'absolute';\r\n        // _textarea.style.top = areaPosition.y + 'px';\r\n        // _textarea.style.left = areaPosition.x + 'px';\r\n        _textarea.style.width = _textNode.width() + 'px';\r\n        _textarea.style.height = _textNode.height() + 'px';\r\n\r\n        // console.log(_textarea.value);\r\n\r\n        if(_textarea.value)\r\n        {\r\n            _textNode.text(_textarea.value);\r\n            _drawLayer.draw();\r\n        }\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        transform.invert();\r\n        let pos = node.getStage().getPointerPosition();\r\n        return transform.point(pos);\r\n    }\r\n\r\n    textInput(x, y) {\r\n        let text = new Konva.Text({\r\n            x: x,\r\n            y: y,\r\n            text: '나눔스퀘어',\r\n            fontSize: 30,\r\n            fontFamily: '나눔고딕',\r\n            // fontFamily: '나눔스퀘어',\r\n            fill: this.getColor()\r\n        });\r\n        _drawLayer.add(text);\r\n        _drawLayer.batchDraw();\r\n\r\n    }\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_textarea) document.body.removeChild(_textarea);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/TextInput.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\nimport Utility from \"../util/utility\";\r\n\r\nlet _stage, _drawLayer, _this;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\nlet g_imgData, g_canvasWidth, g_targetColor;\r\n\r\nexport default class FloodFillBack {\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = GameConfig.MAIN_LAYER;\r\n        _this = this;\r\n        this.useTool();\r\n\r\n    }\r\n\r\n    useTool () {\r\n        let isDrawing = false;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            isDrawing = true;\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            let color = Utility.hexToRgb(this.getColor());\r\n            this.paintAt(_drawLayer, color, pos.x, pos.y);\r\n\r\n        });\r\n    }\r\n\r\n    paintAt(ctx, targetColor, startX, startY) {\r\n\r\n        g_targetColor = targetColor;\r\n        g_canvasWidth = ctx.canvas.width;\r\n        g_imgData = ctx.canvas.context._context.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n        let pixelPos = (startY * g_canvasWidth + startX) * 4,\r\n            r = g_imgData.data[pixelPos],\r\n            g = g_imgData.data[pixelPos + 1],\r\n            b = g_imgData.data[pixelPos + 2],\r\n            a = g_imgData.data[pixelPos + 3];\r\n\r\n        if (r === g_targetColor.r && g === g_targetColor.g && b === g_targetColor.b && a === g_targetColor.a) {\r\n            // Return because trying to fill with the same color\r\n            return null;\r\n        }\r\n\r\n        this.floodFill(ctx, startX, startY, r, g, b, a);\r\n\r\n        // ctx.putImageData(g_imgData, 0, 0);\r\n        _drawLayer.canvas.context.putImageData(g_imgData,0,0);\r\n        g_imgData = null;\r\n    }\r\n\r\n    floodFill(ctx, startX, startY, startR, startG, startB, startA) {\r\n        let canvasWidth = g_canvasWidth,\r\n            newPos,\r\n            x,\r\n            y,\r\n            pixelPos,\r\n            reachLeft,\r\n            reachRight,\r\n            drawingBoundLeft = 0,\r\n            drawingBoundTop = 0,\r\n            drawingBoundRight = ctx.canvas.width,\r\n            drawingBoundBottom = ctx.canvas.height,\r\n            pixelStack = [[startX, startY]];\r\n\r\n        while (pixelStack.length) {\r\n\r\n            newPos = pixelStack.pop();\r\n            x = newPos[0];\r\n            y = newPos[1];\r\n\r\n            // Get current pixel position\r\n            pixelPos = (y * canvasWidth + x) * 4;\r\n\r\n            // Go up as long as the color matches and are inside the canvas\r\n            while (y > drawingBoundTop && this.matchStartColor(pixelPos, startR, startG, startB, startA)) {\r\n                y -= 1;\r\n                pixelPos -= canvasWidth * 4;\r\n            }\r\n\r\n            pixelPos += canvasWidth * 4;\r\n            y += 1;\r\n            reachLeft = false;\r\n            reachRight = false;\r\n\r\n            // Go down as long as the color matches and in inside the canvas\r\n            while (y < drawingBoundBottom && this.matchStartColor(pixelPos, startR, startG, startB, startA)) {\r\n                y += 1;\r\n\r\n                this.colorPixel(pixelPos);\r\n\r\n                if (x > drawingBoundLeft) {\r\n                    if (this.matchStartColor(pixelPos - 4, startR, startG, startB, startA)) {\r\n                        if (!reachLeft) {\r\n                            // Add pixel to stack\r\n                            pixelStack.push([x - 1, y]);\r\n                            reachLeft = true;\r\n                        }\r\n                    } else if (reachLeft) {\r\n                        reachLeft = false;\r\n                    }\r\n                }\r\n\r\n                if (x < drawingBoundRight) {\r\n                    if (this.matchStartColor(pixelPos + 4, startR, startG, startB, startA)) {\r\n                        if (!reachRight) {\r\n                            // Add pixel to stack\r\n                            pixelStack.push([x + 1, y]);\r\n                            reachRight = true;\r\n                        }\r\n                    } else if (reachRight) {\r\n                        reachRight = false;\r\n                    }\r\n                }\r\n\r\n                pixelPos += canvasWidth * 4;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    matchStartColor(pixelPos, startR, startG, startB, startA) {\r\n        const arr = g_imgData.data;\r\n        return (\r\n            startR === arr[pixelPos] &&\r\n            startG === arr[pixelPos + 1] &&\r\n            startB === arr[pixelPos + 2] &&\r\n            startA === arr[pixelPos + 3]\r\n        );\r\n    }\r\n\r\n    colorPixel(pixelPos) {\r\n        const arr = g_imgData.data;\r\n        arr[pixelPos] = g_targetColor.r;\r\n        arr[pixelPos + 1] = g_targetColor.g;\r\n        arr[pixelPos + 2] = g_targetColor.b;\r\n        arr[pixelPos + 3] = 255;\r\n    }\r\n\r\n\r\n    getRelativePointerPosition(node) {\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        transform.invert();\r\n        let pos = node.getStage().getPointerPosition();\r\n        return transform.point(pos);\r\n    }\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n    }\r\n\r\n    sampleDrawImage(ctx) {\r\n        ctx.canvas.context.beginPath();\r\n        // ctx.canvas.context.fillStyle = \"#fff\";\r\n        // ctx.canvas.context.fillRect(0,0,ctx.canvas.width, ctx.canvas.height);\r\n        ctx.canvas.context.fillStyle = \"#18843c\";\r\n        ctx.canvas.context.fillRect(25,25,350,250);\r\n        ctx.canvas.context.fillStyle = \"#fff\";\r\n        ctx.canvas.context.fillRect(100,100,50,50);\r\n        ctx.canvas.context.fillRect(175,150,15,75);\r\n        ctx.canvas.context.fillRect(300,200,100,75);\r\n        ctx.canvas.context.fillRect(220,75,100,50);\r\n        ctx.canvas.context.closePath();\r\n        ctx.canvas.context.fill();\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/FloodFill.js"],"sourceRoot":""}