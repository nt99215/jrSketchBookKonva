{"version":3,"sources":["webpack:///webpack/bootstrap 66c052ac9935a19796eb","webpack:///./src/data/GameConfig.js","webpack:///./src/manager/LayerManager.js","webpack:///./src/index.js","webpack:///./src/sketchBook/SketchBookKonva.js","webpack:///./src/module/LineDraw.js","webpack:///./src/module/Brush.js","webpack:///./src/module/Airbrush.js","webpack:///./src/module/Crayon.js","webpack:///./src/util/utility.js","webpack:///./src/module/Eraser.js","webpack:///./src/module/Zoom.js","webpack:///./src/module/Move.js","webpack:///./src/module/ClearCanvas.js","webpack:///./src/module/ScreenTone.js"],"names":["_tool","_isDrawingMode","_isLineDrawing","_selectedColor","_selectedSize","_drawingHistory","_historyLimit","_defaultTension","_defaultBrushSize","_defaultLineSize","_defaultEraserSize","_defaultColor","_defaultOpacity","_mainStage","_mainDrawLayer","_currentLayer","_stageSize","width","height","GameConfig","MAIN_STAGE","obj","STAGE_SIZE","MAIN_LAYER","CURRENT_LAYER","CURRENT_TOOL","DEFAULT_TENSION","IS_DRAWING_MODE","bool","IS_LINE_DRAWING","SELECTED_COLOR","str","SELECTED_SIZE","num","push","DEFAULT_BRUSH_SIZE","DEFAULT_LINE_SIZE","DEFAULT_ERASER_SIZE","DEFAULT_COLOR","DEFAULT_OPACITY","LayerManager","init","currentLayer","img","Konva","Image","image","canvas","_canvas","add","draw","remove","s","SketchBookKonva","_id","_stage","_mainLayer","$","id","document","getElementById","toolsEl","brushEl","airBrushEl","crayonEl","lineEl","screenToneEl","eraserEl","textEl","zoomEl","clearEl","moveEl","colorEl","sizeEl","opacityEl","zoomSlider","brushTypeEl","eraserTypeEl","lineTypeEl","crayonTypeEl","screenToneTypeEl","_elementArr","el","Brush","Airbrush","Crayon","LineDraw","ScreenTone","Eraser","Zoom","ClearCanvas","Move","constructor","layer","_init","Stage","container","_createImg","Layer","onchange","setColor","value","setSize","setOpacity","getOpacity","i","eL","o","onclick","_toolSelect","e","setLineType","_layerClear","_toolsDestroy","prototype","getColor","getSize","destroy","clear","imageURL","fromURL","_drawLayer","_this","isPaint","_line","_dashEnabled","_color","_size","_opacity","_dashConfigArr","_lineType","stage","useTool","on","pos","getPointerPosition","Line","points","x","y","lineCap","opacity","stroke","strokeWidth","dashEnabled","dash","getLineType","oldPoints","off","color","size","pop","type","target","substr","name","length","_typeConfigArr","_img","_brushType","_clone","_shapeEnable","_imgObj","w","h","r","_angleRatio","_lineCap","isDrawing","currentLine","evt","getRelativePointerPosition","globalCompositeOperation","getLineCap","tension","newPoints","concat","Rect","parseInt","rotation","fill","cache","imageDraw","batchDraw","node","transform","getAbsoluteTransform","copy","invert","getStage","point","clone","setLineCap","angle","Math","random","PI","radius","xPos","cos","yPos","sin","c","rect","perfectDrawEnabled","listening","_pattern","_crayonType","_imgSrc","getCrayonImage","attrs","Utility","hexToRgb","filters","Filters","RGBA","red","green","g","blue","b","onload","src","newCtx","createElement","getContext","hexType","hex","replace","match","a","_rgbToHex","rgbToHex","map","toString","join","_hexToRgb","m","substring","console","log","_mode","_currentNum","_lineArr","drawLayer","_defaultViewPort","_minimumViewPort","_maximumViewPort","_currentViewPort","sizeChange","scale","sizeSetMouseWheel","move","draggable","scaleBy","preventDefault","oldScale","scaleX","mousePointTo","newScale","deltaY","newPos","position","canvasClear","_screenToneType","fillPatternImage","sample","patternDraw","pattern","images","patternPentagon","fillPatternOffset","sources","darthVader"],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 66c052ac9935a19796eb","let _tool = null;\r\nlet _isDrawingMode = false;\r\nlet _isLineDrawing = false;\r\nlet _selectedColor = '';\r\nlet _selectedSize = 0;\r\nlet _drawingHistory = [];\r\nconst _historyLimit = 30;\r\n\r\nconst _defaultTension = 0.3;\r\nconst _defaultBrushSize = 10;\r\nconst _defaultLineSize = 15;\r\nconst _defaultEraserSize = 15;\r\nconst _defaultColor = '#000000';\r\nconst _defaultOpacity = 100;\r\n\r\nlet _mainStage = null;\r\nlet _mainDrawLayer = null;\r\nlet _currentLayer = null;\r\nlet _stageSize = {width:800, height:450}\r\n\r\nexport default class GameConfig {\r\n\r\n    static get MAIN_STAGE() { return _mainStage};\r\n    static set MAIN_STAGE(obj) { _mainStage = obj};\r\n\r\n    static get STAGE_SIZE() { return _stageSize};\r\n    static set STAGE_SIZE(obj) { _stageSize = obj};\r\n\r\n    static get MAIN_LAYER() { return _mainDrawLayer};\r\n    static set MAIN_LAYER(obj) { _mainDrawLayer = obj};\r\n\r\n    static get CURRENT_LAYER() { return _currentLayer};\r\n    static set CURRENT_LAYER(obj) { _currentLayer = obj};\r\n\r\n    static get CURRENT_TOOL() { return _tool};\r\n    static set CURRENT_TOOL(obj) { _tool = obj};\r\n\r\n    static get DEFAULT_TENSION() { return _defaultTension};\r\n\r\n    static get IS_DRAWING_MODE() { return _isDrawingMode};\r\n    static set IS_DRAWING_MODE(bool) { _isDrawingMode = bool};\r\n\r\n    static get IS_LINE_DRAWING() { return _isLineDrawing};\r\n    static set IS_LINE_DRAWING(bool) { _isLineDrawing = bool};\r\n\r\n    static get SELECTED_COLOR() { return _selectedColor};\r\n    static set SELECTED_COLOR(str) { _selectedColor = str};\r\n\r\n    static get SELECTED_SIZE() { return _selectedSize};\r\n    static set SELECTED_SIZE(num) { _selectedSize = num}\r\n\r\n    static get SELECTED_SIZE() { return _drawingHistory};\r\n    static set SELECTED_SIZE(obj) { _drawingHistory.push(obj)};\r\n\r\n    static get DEFAULT_BRUSH_SIZE() { return _defaultBrushSize};\r\n    static get DEFAULT_LINE_SIZE() { return _defaultLineSize};\r\n    static get DEFAULT_ERASER_SIZE() { return _defaultEraserSize};\r\n    static get DEFAULT_COLOR() { return _defaultColor};\r\n    static get DEFAULT_OPACITY() { return _defaultOpacity};\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/GameConfig.js","import GameConfig from \"../data/GameConfig\";\r\n\r\nexport default class LayerManager {\r\n    /**/init(currentLayer) {\r\n        let _currentLayer = currentLayer;\r\n        let img = new Konva.Image({\r\n                image:_currentLayer.canvas._canvas,\r\n                width:GameConfig.STAGE_SIZE.width,\r\n                height:GameConfig.STAGE_SIZE.height\r\n        });\r\n        GameConfig.MAIN_LAYER.add(img);\r\n        GameConfig.MAIN_LAYER.draw();\r\n        // _currentLayer.destroy();\r\n        GameConfig.MAIN_STAGE.remove(_currentLayer);\r\n        // _currentLayer.clear();\r\n        _currentLayer.remove();\r\n        _currentLayer = null;\r\n        // console.log(\"GameConfig.MAIN_LAYER\", GameConfig.MAIN_LAYER);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/manager/LayerManager.js","import SketchBookKonva from \"./sketchBook/SketchBookKonva\";\r\nlet s = new SketchBookKonva('container');\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import LineDraw from \"../module/LineDraw\";\r\nimport Brush from \"../module/Brush\";\r\nimport GameConfig from \"../data/GameConfig\";\r\nimport Airbrush from \"../module/Airbrush\";\r\nimport Crayon from \"../module/Crayon\";\r\nimport Eraser from \"../module/Eraser\";\r\nimport Zoom from \"../module/Zoom\";\r\nimport Move from \"../module/Move\";\r\nimport ClearCanvas from \"../module/ClearCanvas\";\r\nimport ScreenTone from \"../module/ScreenTone\";\r\n\r\nlet _id, _stage, _mainLayer;\r\n\r\nlet $ = function(id){return document.getElementById(id)};\r\nlet toolsEl = $('tools'),\r\n    brushEl = $('brush'),\r\n    airBrushEl = $('airBrush'),\r\n    crayonEl = $('crayon'),\r\n    // fillEl = $('fill'),\r\n    lineEl = $('line'),\r\n    screenToneEl = $('screenTone'),\r\n    eraserEl = $('eraser'),\r\n    textEl = $('text'),\r\n    zoomEl= $('zoom'),\r\n    // moveEl = $('move'),\r\n    clearEl = $('clear'),\r\n    moveEl = $('move'),\r\n\r\n    //tools Property\r\n    colorEl = $('_color'),\r\n    sizeEl = $('_size'),\r\n    opacityEl = $('_opacity'),\r\n    zoomSlider = $('_zoom'),\r\n\r\n\r\n    /**\r\n     * TOOLS TYPE\r\n     * @type {HTMLElement | jQuery | HTMLElement}\r\n     */\r\n        //BRUSH TYPE\r\n    brushTypeEl = $('brushType'),\r\n\r\n    //ERASER TYPE\r\n    eraserTypeEl = $('EraserType'),\r\n\r\n    //LINE TYPE\r\n    lineTypeEl = $('lineType'),\r\n\r\n    //CRAYON TYPE\r\n    crayonTypeEl = $('crayonType'),\r\n\r\n    //SCREEN_TONE TYPE\r\n    screenToneTypeEl = $('screenToneType')\r\n\r\nlet _elementArr = [\r\n    {el:brushEl, obj:Brush},\r\n    {el:airBrushEl, obj:Airbrush},\r\n    {el:crayonEl, obj:Crayon},\r\n    {el:lineEl, obj:LineDraw},\r\n    {el:screenToneEl, obj:ScreenTone},\r\n    {el:eraserEl, obj:Eraser},\r\n    {el:zoomEl, obj:Zoom},\r\n    {el:clearEl, obj:ClearCanvas},\r\n    {el:moveEl, obj:Move},\r\n]\r\n\r\nexport default class SketchBookKonva {\r\n    constructor(id, width, height, layer = 1) {\r\n        _id = id;\r\n        this._init();\r\n    }\r\n\r\n    _init() {\r\n\r\n        _stage = new Konva.Stage({\r\n            container: 'container',\r\n            width:GameConfig.STAGE_SIZE.width,\r\n            height:GameConfig.STAGE_SIZE.height\r\n        });\r\n\r\n        GameConfig.MAIN_STAGE = _stage;\r\n\r\n        this._createImg();\r\n\r\n        _mainLayer = new Konva.Layer();\r\n        GameConfig.MAIN_LAYER = _mainLayer;\r\n        _stage.add(_mainLayer);\r\n\r\n        colorEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setColor(this.value);\r\n        }\r\n\r\n        sizeEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setSize(this.value);\r\n        }\r\n\r\n        opacityEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL)\r\n            {\r\n                GameConfig.CURRENT_TOOL.setOpacity(this.value);\r\n                GameConfig.CURRENT_TOOL.getOpacity();\r\n            }\r\n        }\r\n\r\n        zoomSlider.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setSize(this.value);\r\n        }\r\n\r\n\r\n        /**TOOLS SELECT\r\n         *\r\n         */\r\n        for(let i in _elementArr)\r\n        {\r\n            let eL = _elementArr[i].el;\r\n            let o =  _elementArr[i].obj;\r\n            eL.onclick =()=> this._toolSelect(eL.id, o);\r\n        }\r\n\r\n        /**\r\n         * BRUSH STYLE\r\n         */\r\n        brushTypeEl.onchange = function(e) {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setLineType(e);\r\n        }\r\n\r\n        /**\r\n         * LINE STYLE\r\n         */\r\n        lineTypeEl.onchange = function(e) {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setLineType(e);\r\n        }\r\n\r\n        /**\r\n         * CRAYON STYLE\r\n         */\r\n        crayonTypeEl.onchange = function(e) {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setLineType(e);\r\n        }\r\n\r\n        /**\r\n         * CRAYON STYLE\r\n         */\r\n        screenToneTypeEl.onchange = function(e) {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setLineType(e);\r\n        }\r\n\r\n        this._toolSelect();\r\n\r\n    }\r\n\r\n\r\n    _toolSelect(id = '', obj =  Brush) {\r\n        // toolsEl.style.display = 'none';\r\n        // brushTypeEl.style.display = '';\r\n\r\n        if(id === 'zoom' || id === 'clear' || id === 'move')\r\n        {\r\n            GameConfig.IS_DRAWING_MODE = false;\r\n            if(id === 'clear') this._layerClear();\r\n            return;\r\n        }\r\n\r\n\r\n        GameConfig.IS_DRAWING_MODE = true;\r\n        // GameConfig.IS_LINE_DRAWING = true;\r\n        this._toolsDestroy();\r\n\r\n        if(id === 'eraser') {\r\n            GameConfig.IS_DRAWING_MODE = false;\r\n            obj.prototype.init(_stage, _mainLayer);\r\n            return;\r\n        }\r\n        else obj.prototype.init(_stage);\r\n\r\n\r\n        colorEl.value = obj.prototype.getColor();\r\n        sizeEl.value = obj.prototype.getSize();\r\n        opacityEl.value = obj.prototype.getOpacity();\r\n\r\n    }\r\n\r\n    _layerClear() {\r\n        _stage.remove(GameConfig.MAIN_LAYER);\r\n        // GameConfig.MAIN_LAYER.clear();\r\n        if(GameConfig.MAIN_LAYER)\r\n        {\r\n            GameConfig.MAIN_LAYER.remove();\r\n            GameConfig.MAIN_LAYER.destroy();\r\n            GameConfig.MAIN_LAYER = null;\r\n        }\r\n        if(GameConfig.CURRENT_LAYER)\r\n        {\r\n            _stage.remove(GameConfig.CURRENT_LAYER);\r\n            GameConfig.CURRENT_LAYER.clear();\r\n            GameConfig.CURRENT_LAYER.remove();\r\n            GameConfig.CURRENT_LAYER.destroy();\r\n            GameConfig.CURRENT_LAYER = null;\r\n        }\r\n        _mainLayer = new Konva.Layer();\r\n        _stage.add(_mainLayer);\r\n        GameConfig.MAIN_LAYER = _mainLayer;\r\n        _mainLayer.draw();\r\n    }\r\n\r\n\r\n    _createImg() {\r\n        const imageURL = 'asset/image/sampleImg.jpg';\r\n        const layer = new Konva.Layer();\r\n        Konva.Image.fromURL(imageURL, (image)=>{\r\n\r\n            layer.add(image);\r\n            layer.draw();\r\n        });\r\n        _stage.add(layer);\r\n\r\n    }\r\n\r\n\r\n    _toolsDestroy() {\r\n        if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.destroy();\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/sketchBook/SketchBookKonva.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this, isPaint, _line, _dashEnabled;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\nconst _dashConfigArr = [[0], [0, 0, 30], [0, 30]];\r\nlet _lineType = _dashConfigArr[0];\r\n\r\nexport default class LineDraw {\r\n\r\n    init(stage) {\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer();\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n        _dashEnabled = false;\r\n\r\n        this.useTool();\r\n    }\r\n\r\n    useTool() {\r\n        _stage.on('mousedown touchstart', function () {\r\n            isPaint = true;\r\n            let pos = _stage.getPointerPosition();\r\n\r\n            _line = new Konva.Line({\r\n                points: [pos.x, pos.y, pos.x, pos.y],\r\n                // pointerLength: 20,\r\n                // pointerWidth: 20,\r\n                lineCap:'round',\r\n                opacity:_this.getOpacity() / 100,\r\n                stroke: _this.getColor(),\r\n                strokeWidth: _this.getSize(),\r\n                dashEnabled: _dashEnabled,\r\n                dash:_this.getLineType()\r\n            });\r\n            _drawLayer.add(_line);\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', function () {\r\n            isPaint = false;\r\n            LayerManager.prototype.init(_drawLayer);\r\n            _drawLayer = new Konva.Layer();\r\n            _stage.add(_drawLayer);\r\n            GameConfig.CURRENT_LAYER = _drawLayer;\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', function () {\r\n\r\n            // if(!GameConfig.IS_LINE_DRAWING || !isPaint) return;\r\n            if(!isPaint) return;\r\n\r\n            let pos = _stage.getPointerPosition();\r\n            let oldPoints = _line.points();\r\n            _line.points([oldPoints[0], oldPoints[1], pos.x, pos.y])\r\n            _drawLayer.draw();\r\n        });\r\n    }\r\n\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        isPaint = false;\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) {\r\n        _size = size;\r\n        _lineType.pop();\r\n        _lineType.push(_size * 2);\r\n    }\r\n    getSize() {return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    /**\r\n     *\r\n     * @param lineType\r\n     */\r\n    setLineType(e) {\r\n        let type = e.target.id.substr(1, e.target.name.length + 1);\r\n        switch (type)\r\n        {\r\n            case 'stroke' :\r\n                _lineType = [0];\r\n                break;\r\n            case 'dot' :\r\n                _lineType = [0, this.getSize() * 2];\r\n                break;\r\n            case 'dash' :\r\n                _lineType = [0, 0, this.getSize() * 2];\r\n                break;\r\n            default :\r\n                _lineType = [0];\r\n                break;\r\n        }\r\n        _dashEnabled = type !== 'stroke';\r\n    }\r\n\r\n    getLineType() {return _lineType;}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/LineDraw.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\nconst _typeConfigArr = [[0,0], [0, 0, 15], [0, 10]];\r\nlet _img, _brushType,_clone, _shapeEnable;\r\nconst _imgObj = {w:0, h:0, r:0};\r\nconst _angleRatio = 4;\r\nlet _lineCap = 'round';\r\n\r\n\r\nexport default class Brush {\r\n\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer();\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n        _shapeEnable = false;\r\n\r\n\r\n        this.useTool();\r\n\r\n    }\r\n\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n        let currentLine;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            // Start drawing\r\n            isDrawing = true;\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            if(! _shapeEnable)\r\n            {\r\n                currentLine = new Konva.Line({\r\n                    stroke: _this.getColor(),\r\n                    strokeWidth: _this.getSize(),\r\n                    points: [pos.x, pos.y],\r\n                    globalCompositeOperation:'source-over',\r\n                    // globalCompositeOperation:'destination-out',\r\n                    // lineCap:'square',\r\n                    lineCap:_this.getLineCap(),\r\n                    tension:GameConfig.DEFAULT_TENSION,\r\n                    // fill:'#ffcc00',\r\n                    // fillPatternImage:'asset/image/starImg.png',\r\n                    // fillEnabled:true,\r\n                    opacity:_this.getOpacity() / 100\r\n                });\r\n\r\n                _drawLayer.add(currentLine);\r\n            }\r\n\r\n            else currentLine = {points:[pos.x, pos.y]}\r\n\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', (evt) => {\r\n            if (!isDrawing) return;\r\n\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            if(! _shapeEnable)\r\n            {\r\n\r\n                let newPoints = currentLine.points().concat([pos.x, pos.y]);\r\n                currentLine.points(newPoints);\r\n            }\r\n\r\n            else\r\n            {\r\n                let obj = _imgObj;\r\n                _img = new Konva.Rect({\r\n                    // width:_this.getSize(),\r\n                    // height:_this.getSize(),\r\n                    width:parseInt(obj.w  * this.getSize()),\r\n                    height:parseInt(obj.h * this.getSize()),\r\n                    rotation:obj.r,\r\n                    fill:_this.getColor(),\r\n                })\r\n\r\n                _img.cache();\r\n                this.imageDraw(pos.x, pos.y);\r\n            }\r\n            _drawLayer.batchDraw();\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            isDrawing = false;\r\n            LayerManager.prototype.init(_drawLayer);\r\n            _drawLayer = new Konva.Layer();\r\n            _stage.add(_drawLayer);\r\n            GameConfig.CURRENT_LAYER = _drawLayer;\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        transform.invert();\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n\r\n    imageDraw(x, y) {\r\n        _clone = _img.clone({\r\n            x:x,\r\n            y:y,\r\n            // width:_img.scale.x * 20,\r\n            // height:10,\r\n            fill:_this.getColor(),\r\n        });\r\n\r\n        _clone.cache();\r\n        _drawLayer.add(_clone);\r\n    }\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n\r\n        // console.log('brush', _drawLayer);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    /**\r\n     *\r\n     * @param lineCap\r\n     */\r\n    setLineCap(str) { _lineCap = str;}\r\n    getLineCap() { return _lineCap;}\r\n\r\n    /**\r\n     *\r\n     * @param linType\r\n     */\r\n    setLineType(e) {\r\n        let type = e.target.id.substr(1, e.target.name.length + 1);\r\n        switch (type)\r\n        {\r\n            case 'circle' :\r\n                this.setLineCap('round');\r\n                _shapeEnable = false;\r\n                break;\r\n            case 'rect' :\r\n                this.setLineCap('square');\r\n                _shapeEnable = false;\r\n                break;\r\n            case 'diamond' :\r\n                _imgObj.w = 1;\r\n                _imgObj.h = 1;\r\n                _imgObj.r = 45;\r\n                _shapeEnable = true;\r\n                break;\r\n            case 'column' :\r\n                _imgObj.w = 1/_angleRatio;\r\n                _imgObj.h = 1;\r\n                _imgObj.r = 0;\r\n                _shapeEnable = true;\r\n                break;\r\n            case 'row' :\r\n                _imgObj.w = 1;\r\n                _imgObj.h = 1/_angleRatio;\r\n                _imgObj.r = 0;\r\n                _shapeEnable = true;\r\n                break;\r\n            case 'slash' :\r\n                _imgObj.w = 1;\r\n                _imgObj.h = 1/_angleRatio;\r\n                _imgObj.r = -35;\r\n                _shapeEnable = true;\r\n                break;\r\n\r\n        }\r\n    }\r\n    getLineType() { return _brushType;}\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Brush.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\n\r\n\r\nexport default class Airbrush {\r\n\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer();\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n\r\n        this.useTool();\r\n    }\r\n\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n        let currentLine;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            // Start drawing\r\n            isDrawing = true;\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            currentLine = {points:[pos.x, pos.y]}\r\n            // _drawLayer.add(currentLine);\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            if (!isDrawing) {\r\n                return;\r\n            }\r\n\r\n            // If drawing, add new point to the current line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            // let newPoints = currentLine.points().concat([pos.x, pos.y]);\r\n            // currentLine.points(newPoints);\r\n            this.imageDraw(pos.x, pos.y);\r\n\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            isDrawing = false;\r\n            LayerManager.prototype.init(_drawLayer);\r\n            _drawLayer = new Konva.Layer();\r\n            _stage.add(_drawLayer);\r\n            GameConfig.CURRENT_LAYER = _drawLayer;\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        transform.invert();\r\n\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n\r\n    imageDraw(x, y) {\r\n\r\n        let angle = Math.random() * Math.PI * 2;\r\n        let radius = Math.random() * this.getSize() / 2;\r\n        let xPos = x + Math.cos(angle) * radius;\r\n        let yPos = y + Math.sin(angle) * radius;\r\n        let c = this.getColor();\r\n        let r = (Math.random() * 10)/5;\r\n        for(let  i = 0; i<3; i++)\r\n        {\r\n            let rect = new Konva.Rect({\r\n                x:xPos,\r\n                y:yPos,\r\n                width:r,\r\n                height:r,\r\n                fill: c,\r\n                perfectDrawEnabled:false,\r\n                listening:false\r\n            });\r\n            _drawLayer.add(rect);\r\n            _drawLayer.batchDraw();\r\n        }\r\n\r\n    }\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Airbrush.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\nimport Utility from \"../util/utility\";\r\n\r\nlet _stage, _drawLayer, _this,_pattern, _clone;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE * 2;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\nlet _crayonType = 0;\r\nlet _imgSrc = [\r\n    'asset/image/pattern/crayon0/pattern_0.png',\r\n    'asset/image/pattern/crayon1/pattern_1.png',\r\n    'asset/image/pattern/crayon2/pattern_2.png'];\r\n\r\n\r\nexport default class Crayon {\r\n\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer();\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n\r\n        this.getCrayonImage();\r\n        this.useTool();\r\n    }\r\n\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n        let currentLine;\r\n\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            // Start drawing\r\n            isDrawing = true;\r\n\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            currentLine = {points:[pos.x, pos.y]}\r\n            this.getSize();\r\n            this.getColor();\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', (evt) => {\r\n            if (!isDrawing) return;\r\n\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            this.imageDraw(pos.x, pos.y);\r\n            _drawLayer.batchDraw();\r\n\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            isDrawing = false;\r\n            LayerManager.prototype.init(_drawLayer);\r\n            _drawLayer = new Konva.Layer();\r\n            _stage.add(_drawLayer);\r\n            GameConfig.CURRENT_LAYER = _drawLayer;\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        // transform.invert();\r\n\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n\r\n    imageDraw(x, y) {\r\n\r\n        let obj = _pattern.attrs.image;\r\n        _clone = _pattern.clone({\r\n            x:x - obj.width/2,\r\n            y:y - obj.height/2,\r\n        });\r\n        _clone.cache();\r\n        _drawLayer.add(_clone);\r\n    }\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) {_color = color;}\r\n    getColor() {\r\n        let c = Utility.hexToRgb(_color);\r\n        _pattern.filters([Konva.Filters.RGBA]);\r\n        _pattern.red(c.r);\r\n        _pattern.green(c.g);\r\n        _pattern.blue(c.b);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size * 2;}\r\n    getSize() {\r\n        let obj = _pattern.attrs.image;\r\n        obj.width = _size;\r\n        obj.height = _size;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    /**\r\n     *\r\n     * @param lineType\r\n     */\r\n    setLineType(e) {\r\n        let type = e.target.id.substr(1, e.target.name.length + 1);\r\n        switch (type)\r\n        {\r\n            case 'cA' :\r\n                _crayonType = 0;\r\n                break;\r\n            case 'cB' :\r\n                _crayonType = 1;\r\n                break;\r\n            case 'cC' :\r\n                _crayonType = 2\r\n                break;\r\n            default :\r\n                _crayonType = 0;\r\n                break;\r\n        }\r\n        this.getCrayonImage();\r\n    }\r\n\r\n    getLineType() {return _crayonType;}\r\n\r\n    getCrayonImage() {\r\n        _pattern = new Image();\r\n        _pattern.onload =()=> {\r\n            let img = new Konva.Image({\r\n                image:_pattern,\r\n            });\r\n            _pattern = img;\r\n            _pattern.cache();\r\n        }\r\n        _pattern.src = _imgSrc[this.getLineType()];\r\n    }\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Crayon.js","export default class Utility {\r\n\r\n    static newCtx(width, height) {\r\n        let canvas = document.createElement(\"canvas\");\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        return canvas.getContext(\"2d\");\r\n    }\r\n\r\n    static hexToRgb(hexType) {\r\n        let hex = hexType.replace( \"#\", \"\" );\r\n        let value = hex.match( /[a-f\\d]/gi );\r\n\r\n        // 헥사값이 세자리일 경우, 여섯자리로.\r\n        if ( value.length == 3 ) hex = value[0] + value[0] + value[1] + value[1] + value[2] + value[2];\r\n\r\n        value = hex.match( /[a-f\\d]{2}/gi );\r\n        let r = parseInt( value[0], 16 );\r\n        let g = parseInt( value[1], 16 );\r\n        let b = parseInt( value[2], 16 );\r\n\r\n        return {\r\n            r, g, b, a: 255\r\n        };\r\n    }\r\n\r\n    _rgbToHex(r,g,b) {\r\n\r\n        let rgbToHex = (r, g, b) => '#' + [r, g, b].map(x => {\r\n            const hex = x.toString(16)\r\n            return hex.length === 1 ? '0' + hex : hex\r\n        }).join('');\r\n\r\n        // console.log(rgbToHex)\r\n    }\r\n\r\n    _hexToRgb(hex) {\r\n        hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i\r\n            ,(m, r, g, b) => '#' + r + r + g + g + b + b)\r\n            .substring(1).match(/.{2}/g)\r\n            .map(x => parseInt(x, 16))\r\n\r\n        console.log(hex);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/util/utility.js","import GameConfig from \"../data/GameConfig\";\r\n\r\nlet _stage, _this, _mode, _currentNum, _drawLayer, isDrawing;\r\nlet _lineArr = [];\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\n\r\nexport default class Eraser {\r\n\r\n\r\n    init(stage, drawLayer) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = drawLayer;\r\n        _this = this;\r\n\r\n        // _stage.add(_drawLayer);\r\n        this.useTool();\r\n\r\n    }\r\n\r\n    useTool () {\r\n        isDrawing = false;\r\n        let currentLine;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // Start drawing\r\n            isDrawing = true;\r\n            // Create new line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            currentLine = new Konva.Line({\r\n                stroke: _this.getColor(),\r\n                strokeWidth: _this.getSize(),\r\n                points: [pos.x, pos.y],\r\n                lineCap:'round',\r\n                tension:GameConfig.DEFAULT_TENSION,\r\n                opacity:_this.getOpacity() / 100,\r\n                globalCompositeOperation:'destination-out'\r\n            });\r\n            _drawLayer.add(currentLine);\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', () => {\r\n            if (!isDrawing) {\r\n                return;\r\n            }\r\n\r\n            // If drawing, add new point to the current line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            let newPoints = currentLine.points().concat([pos.x, pos.y]);\r\n            currentLine.points(newPoints);\r\n            _drawLayer.batchDraw();\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            isDrawing = false;\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        transform.invert();\r\n\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n    destroy() {\r\n        // console.log(\"eraseEND\")\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Eraser.js","import GameConfig from \"../data/GameConfig\";\r\n\r\nconst _defaultViewPort = 1;\r\nconst _minimumViewPort = 50;\r\nconst _maximumViewPort = 200;\r\nlet _currentViewPort = 100;\r\nlet _canvas, _stage, _drawLayer, _this;\r\nexport default class Zoom {\r\n\r\n    init(stage, drawLayer) {\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = drawLayer;\r\n        _this = this;\r\n        // _stage.add(_drawLayer);\r\n    }\r\n\r\n\r\n    sizeChange(num) {\r\n\r\n        // _canvas.zoomToPoint({ x: _canvas.width/2, y: _canvas.height/2 }, this.getSize() * 0.01);\r\n\r\n        // let scaleBy = 1.01;\r\n       /* let scaleBy = num;\r\n        let oldScale = _stage.scaleX();\r\n\r\n        // let pointer = _stage.getPointerPosition();\r\n\r\n        let mousePointTo = {\r\n            x: (pointer.x - _stage.x()) / oldScale,\r\n            y: (pointer.y - _stage.y()) / oldScale,\r\n        };\r\n\r\n        let newScale =\r\n            e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n\r\n        _stage.scale({ x: newScale, y: newScale });\r\n\r\n        let newPos = {\r\n            x: pointer.x - mousePointTo.x * newScale,\r\n            y: pointer.y - mousePointTo.y * newScale,\r\n        };\r\n        */\r\n\r\n        // _stage.scale({ x: num/100, y: num/100 });\r\n        _stage.scale({ x: this.getSize(), y: this.getSize() });\r\n\r\n        // _stage.position(newPos);\r\n        _stage.batchDraw();\r\n    }\r\n\r\n    sizeSetMouseWheel() {\r\n        /*canvas.on('mouse:wheel', function(opt) {\r\n         let delta = opt.e.deltaY;\r\n         let zoom = canvas.getZoom();\r\n         zoom *= 0.999 ** delta;\r\n         if (zoom > 20) zoom = 20;\r\n         if (zoom < 0.01) zoom = 0.01;\r\n         canvas.setZoom(zoom);\r\n         opt.e.preventDefault();\r\n         opt.e.stopPropagation();\r\n     })*/\r\n        // _canvas.setZoom(this.getSize() * 0.01);\r\n    }\r\n\r\n    destroy() {\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(point) {\r\n        // console.log(point)\r\n        // if(_currentViewPort >= _minimumViewPort && _currentViewPort <= _maximumViewPort)\r\n        // _currentViewPort = point;\r\n        _currentViewPort = point/100;\r\n    }\r\n    getSize() { return _currentViewPort;}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Zoom.js","import GameConfig from \"../data/GameConfig\";\r\n\r\nlet _canvas, _stage;\r\nexport default class Move {\r\n    move (stage) {\r\n        GameConfig.IS_DRAWING_MODE = false;\r\n        _stage = stage;\r\n        _stage.draggable(true);\r\n\r\n        let scaleBy = 1.3;\r\n        _stage.on('wheel', (evt) => {\r\n            evt.evt.preventDefault();\r\n            let oldScale = _stage.scaleX();\r\n\r\n            let mousePointTo = {\r\n                x: _stage.getPointerPosition().x / oldScale - _stage.x() / oldScale,\r\n                y: _stage.getPointerPosition().y / oldScale - _stage.y() / oldScale\r\n            };\r\n\r\n            let newScale = evt.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n            _stage.scale({x: newScale, y: newScale});\r\n\r\n            let newPos = {\r\n                x: -(mousePointTo.x - _stage.getPointerPosition().x / newScale) * newScale,\r\n                y: -(mousePointTo.y - _stage.getPointerPosition().y / newScale) * newScale\r\n            };\r\n            _stage.position(newPos);\r\n            _stage.batchDraw();\r\n        });\r\n    }\r\n\r\n    destroy () {\r\n        if(_stage) _stage.draggable(false);\r\n        if(_stage) _stage.off('wheel');\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Move.js","export default class ClearCanvas {\r\n    canvasClear(canvas) {\r\n        // alert(\"are you sure?\");\r\n        canvas.clear();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/ClearCanvas.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this, _pattern, _clone;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\nlet _screenToneType = 0;\r\n\r\nexport default class ScreenTone {\r\n\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer();\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n\r\n        this.useTool();\r\n    }\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n        let currentLine;\r\n        _pattern = this.getCrayonImage();\r\n\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            // Start drawing\r\n            isDrawing = true;\r\n\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            currentLine = {points:[pos.x, pos.y]}\r\n            this.getSize();\r\n            this.getColor();\r\n\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', (evt) => {\r\n            if (!isDrawing) return;\r\n\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            this.imageDraw(pos.x, pos.y);\r\n            _drawLayer.batchDraw();\r\n\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            // isDrawing = false;\r\n            // LayerManager.prototype.init(_drawLayer);\r\n            // _drawLayer = new Konva.Layer();\r\n            // _stage.add(_drawLayer);\r\n            // GameConfig.CURRENT_LAYER = _drawLayer;\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        // transform.invert();\r\n\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n\r\n    imageDraw(x, y) {\r\n\r\n        return;\r\n        // let obj = this.getCrayonImage();\r\n\r\n        _clone = _pattern.clone({\r\n            x:x,\r\n            y:y,\r\n\r\n        });\r\n        _clone.cache();\r\n        _drawLayer.add(_clone);\r\n    }\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    /**\r\n     *\r\n     * @param lineType\r\n     */\r\n    setLineType(e) {\r\n        let type = e.target.id.substr(1, e.target.name.length + 1);\r\n        // console.log(type)\r\n        switch (type)\r\n        {\r\n            case 'sA' :\r\n                _screenToneType = 0;\r\n                break;\r\n            case 'sB' :\r\n                _screenToneType = 1;\r\n                break;\r\n            case 'sC' :\r\n                _screenToneType = 2\r\n                break;\r\n            default :\r\n                _screenToneType = 0;\r\n                break;\r\n        }\r\n        _pattern = this.getCrayonImage();\r\n    }\r\n\r\n    getLineType() {return _screenToneType;}\r\n\r\n    getCrayonImage() {\r\n        // tempBmd = new Konva.B(7,7,true,0x000000)\r\n        _pattern = new Konva.Image();\r\n        for(let i =0; i<4; i++)\r\n        {\r\n            let rect = new Konva.Rect({\r\n                x: i,\r\n                y: i,\r\n                width:1,\r\n                height:1,\r\n                fill:'#fa0a8e',\r\n\r\n            });\r\n            _pattern.fillPatternImage = rect;\r\n        }\r\n        this.sample();\r\n        return _pattern;\r\n\r\n    }\r\n\r\n    sample() {\r\n       /* const image = new window.Image();\r\n        image.onload = () => {\r\n            this.setState({\r\n                fillPatternImage: image\r\n            });\r\n        }\r\n        image.src = 'http://i.imgur.com/A6H6xHF.png';\r\n        this.state = {\r\n            color: 'green',\r\n            fillPatternImage: null\r\n        };*/\r\n\r\n        _pattern = new Image();\r\n        _pattern.onload =()=> {\r\n            let img = new Konva.Image({\r\n                image:_pattern,\r\n                width:20,\r\n                height:20\r\n            });\r\n            // _pattern = img;\r\n            // _pattern.cache();\r\n            this.patternDraw(_pattern);\r\n        }\r\n        _pattern.src = 'asset/image/screenToneDefault.png';\r\n        // _pattern.src = 'http://i.imgur.com/A6H6xHF.png';\r\n\r\n\r\n\r\n    }\r\n\r\n    patternDraw(pattern) {\r\n        let images = {};\r\n        console.log(_pattern)\r\n        let patternPentagon = new Konva.Rect({\r\n            x: 0,\r\n            y: 0,\r\n            width: 800,\r\n            height: 550,\r\n            // sides: 6,\r\n            // radius: 170,\r\n            fillPatternImage: pattern,\r\n            fillPatternOffset: { x:20, y: 20 },\r\n            // stroke: 'black',\r\n            // strokeWidth: 4,\r\n            // draggable: true,\r\n        });\r\n\r\n        // patternPentagon.fillPatternImage(_pattern);\r\n        _drawLayer.add(patternPentagon);\r\n        _drawLayer.draw();\r\n\r\n        let sources = {\r\n            darthVader: 'asset/image/screenToneDefault.png',\r\n        };\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/ScreenTone.js"],"sourceRoot":""}