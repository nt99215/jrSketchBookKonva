{"version":3,"sources":["webpack:///webpack/bootstrap c591bf5ee197823fe4ad","webpack:///./src/data/GameConfig.js","webpack:///./src/manager/LayerManager.js","webpack:///./src/index.js","webpack:///./src/sketchBook/SketchBookKonva.js","webpack:///./src/module/LineDraw.js","webpack:///./src/module/Brush.js","webpack:///./src/module/Airbrush.js","webpack:///./src/module/Crayon.js","webpack:///./src/module/Eraser.js","webpack:///./src/module/Zoom.js","webpack:///./src/module/ClearCanvas.js","webpack:///./src/module/Move.js"],"names":["_tool","_isDrawingMode","_isLineDrawing","_selectedColor","_selectedSize","_drawingHistory","_historyLimit","_defaultTension","_defaultBrushSize","_defaultLineSize","_defaultEraserSize","_defaultColor","_defaultOpacity","_mainStage","_mainDrawLayer","_currentLayer","GameConfig","MAIN_STAGE","obj","MAIN_LAYER","CURRENT_LAYER","CURRENT_TOOL","DEFAULT_TENSION","IS_DRAWING_MODE","bool","IS_LINE_DRAWING","SELECTED_COLOR","str","SELECTED_SIZE","num","push","DEFAULT_BRUSH_SIZE","DEFAULT_LINE_SIZE","DEFAULT_ERASER_SIZE","DEFAULT_COLOR","DEFAULT_OPACITY","LayerManager","init","currentLayer","img","Konva","Image","image","canvas","_canvas","add","draw","remove","s","SketchBookKonva","_id","_stage","_layer","_mainLayer","_colorArr","_sizeArr","$","id","document","getElementById","brushEl","lineEl","screenToneEl","eraserEl","textEl","zoomEl","clearEl","moveEl","colorEl","sizeEl","opacityEl","zoomSlider","lineTypeEl","stokeEl","dashEl","dotEl","constructor","width","height","layer","_init","_createImg","imageURL","Layer","fromURL","Stage","container","style","display","onchange","setColor","value","setSize","setOpacity","getOpacity","setLineType","onclick","_toolsDestroy","Brush","prototype","getColor","getSize","LineDraw","Eraser","Zoom","destroy","clear","Move","move","_default","rgbToHex","r","g","b","map","x","hex","toString","length","join","console","log","hexToRgb","replace","m","substring","match","parseInt","_drawLayer","_this","isPaint","_line","_color","_size","_opacity","_dashConfigArr","_lineType","stage","useTool","on","pos","getPointerPosition","Line","points","y","lineCap","opacity","stroke","strokeWidth","dashEnabled","dash","getLineType","oldPoints","off","color","size","isDrawing","currentLine","evt","getRelativePointerPosition","tension","newPoints","concat","batchDraw","node","transform","getAbsoluteTransform","copy","invert","getStage","point","pattern","shape","fillPatternImage","imageObj","onload","src","Airbrush","imageDraw","xPos","RegularPolygon","sides","radius","fill","lineJoin","Crayon","_mode","_currentNum","_lineArr","drawLayer","globalCompositeOperation","_defaultViewPort","_minimumViewPort","_maximumViewPort","_currentViewPort","sizeChange","scale","sizeSetMouseWheel","ClearCanvas","canvasClear","draggable","scaleBy","preventDefault","oldScale","scaleX","mousePointTo","newScale","deltaY","newPos","position"],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c591bf5ee197823fe4ad","let _tool = null;\r\nlet _isDrawingMode = false;\r\nlet _isLineDrawing = false;\r\nlet _selectedColor = '';\r\nlet _selectedSize = 0;\r\nlet _drawingHistory = [];\r\nconst _historyLimit = 30;\r\n\r\nconst _defaultTension = 0.3;\r\nconst _defaultBrushSize = 10;\r\nconst _defaultLineSize = 5;\r\nconst _defaultEraserSize = 15;\r\nconst _defaultColor = '#000000';\r\nconst _defaultOpacity = 100;\r\n\r\nlet _mainStage = null;\r\nlet _mainDrawLayer = null;\r\nlet _currentLayer = null;\r\n\r\nexport default class GameConfig {\r\n\r\n    static get MAIN_STAGE() { return _mainStage};\r\n    static set MAIN_STAGE(obj) { _mainStage = obj};\r\n\r\n    static get MAIN_LAYER() { return _mainDrawLayer};\r\n    static set MAIN_LAYER(obj) { _mainDrawLayer = obj};\r\n\r\n    static get CURRENT_LAYER() { return _currentLayer};\r\n    static set CURRENT_LAYER(obj) { _currentLayer = obj};\r\n\r\n    static get CURRENT_TOOL() { return _tool};\r\n    static set CURRENT_TOOL(obj) { _tool = obj};\r\n\r\n    static get DEFAULT_TENSION() { return _defaultTension};\r\n\r\n    static get IS_DRAWING_MODE() { return _isDrawingMode};\r\n    static set IS_DRAWING_MODE(bool) { _isDrawingMode = bool};\r\n\r\n    static get IS_LINE_DRAWING() { return _isLineDrawing};\r\n    static set IS_LINE_DRAWING(bool) { _isLineDrawing = bool};\r\n\r\n    static get SELECTED_COLOR() { return _selectedColor};\r\n    static set SELECTED_COLOR(str) { _selectedColor = str};\r\n\r\n    static get SELECTED_SIZE() { return _selectedSize};\r\n    static set SELECTED_SIZE(num) { _selectedSize = num}\r\n\r\n    static get SELECTED_SIZE() { return _drawingHistory};\r\n    static set SELECTED_SIZE(obj) { _drawingHistory.push(obj)};\r\n\r\n    static get DEFAULT_BRUSH_SIZE() { return _defaultBrushSize};\r\n    static get DEFAULT_LINE_SIZE() { return _defaultLineSize};\r\n    static get DEFAULT_ERASER_SIZE() { return _defaultEraserSize};\r\n    static get DEFAULT_COLOR() { return _defaultColor};\r\n    static get DEFAULT_OPACITY() { return _defaultOpacity};\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/GameConfig.js","import GameConfig from \"../data/GameConfig\";\r\n\r\nexport default class LayerManager {\r\n    init(currentLayer) {\r\n        let _currentLayer = currentLayer;\r\n        let img = new Konva.Image({\r\n            image:_currentLayer.canvas._canvas,\r\n        });\r\n        GameConfig.MAIN_LAYER.add(img);\r\n        GameConfig.MAIN_LAYER.draw();\r\n        // _currentLayer.destroy();\r\n        GameConfig.MAIN_STAGE.remove(_currentLayer);\r\n        // _currentLayer.clear();\r\n        _currentLayer.remove();\r\n        _currentLayer = null;\r\n        // console.log(\"GameConfig.MAIN_LAYER\", GameConfig.MAIN_LAYER);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/manager/LayerManager.js","import SketchBookKonva from \"./sketchBook/SketchBookKonva\";\r\nlet s = new SketchBookKonva('container');\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import LineDraw from \"../module/LineDraw\";\r\nimport Brush from \"../module/Brush\";\r\nimport GameConfig from \"../data/GameConfig\";\r\nimport Airbrush from \"../module/Airbrush\";\r\nimport Crayon from \"../module/Crayon\";\r\nimport Eraser from \"../module/Eraser\";\r\nimport Zoom from \"../module/Zoom\";\r\nimport ClearCanvas from \"../module/ClearCanvas\";\r\nimport Move from \"../module/Move\";\r\n\r\nlet _id, _stage, _layer, _mainLayer;\r\nlet _colorArr = ['#ff00c8', '#59ff00', '#ffa200', '#0073ff'];\r\nlet _sizeArr = [5,7,10,20,30];\r\n\r\nlet $ = function(id){return document.getElementById(id)};\r\nlet brushEl = $('brush'),\r\n    // airBrushEl = $('airBrush'),\r\n    // crayonEl = $('crayon'),\r\n    // fillEl = $('fill'),\r\n    lineEl = $('line'),\r\n    screenToneEl = $('screenTone'),\r\n    eraserEl = $('eraser'),\r\n    textEl = $('text'),\r\n    zoomEl= $('zoom'),\r\n    // moveEl = $('move'),\r\n    clearEl = $('clear'),\r\n    moveEl = $('move'),\r\n    colorEl = $('_color'),\r\n    sizeEl = $('_size'),\r\n    opacityEl = $('_opacity'),\r\n    zoomSlider = $('_zoom'),\r\n\r\n    //LINE TYPE\r\n    lineTypeEl = $('lineType'),\r\n    stokeEl = $('_stroke'),\r\n    dashEl = $('_dash'),\r\n    dotEl = $('_dot');\r\n\r\nexport default class SketchBookKonva {\r\n    constructor(id, width, height, layer = 1) {\r\n        _id = id;\r\n        this._init();\r\n    }\r\n\r\n    _createImg() {\r\n        let imageURL = 'sampleImg.jpg';\r\n        let layer = new Konva.Layer;\r\n        Konva.Image.fromURL(imageURL, function(image){\r\n            layer.add(image);\r\n            layer.draw();\r\n        });\r\n\r\n        _stage.add(layer)\r\n    }\r\n\r\n    _init() {\r\n\r\n\r\n        _stage = new Konva.Stage({\r\n            container: 'container',\r\n            // width: window.innerWidth,\r\n            // height: window.innerHeight\r\n            width:500,\r\n            height:400\r\n        });\r\n\r\n        GameConfig.MAIN_STAGE = _stage;\r\n\r\n        this._createImg();\r\n\r\n        _mainLayer = new Konva.Layer();\r\n        GameConfig.MAIN_LAYER = _mainLayer;\r\n        _stage.add(_mainLayer);\r\n\r\n\r\n\r\n        // this.LineDraw = LineDraw.prototype.draw(_stage);\r\n        // this.Brush = Brush.prototype.draw(_stage, _mainLayer);\r\n\r\n        zoomSlider.style.display = 'none';\r\n        lineTypeEl.style.display = 'none';\r\n        $('_zoomSpan').style.display ='none';\r\n\r\n\r\n        colorEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setColor(this.value);\r\n        }\r\n\r\n        sizeEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setSize(this.value);\r\n        }\r\n\r\n        opacityEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL)\r\n            {\r\n                GameConfig.CURRENT_TOOL.setOpacity(this.value);\r\n                GameConfig.CURRENT_TOOL.getOpacity();\r\n            }\r\n        }\r\n\r\n        zoomSlider.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setSize(this.value);\r\n        }\r\n\r\n        stokeEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setLineType(0);\r\n        }\r\n        dashEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setLineType(1);\r\n        }\r\n        dotEl.onchange = function() {\r\n            if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.setLineType(2);\r\n        }\r\n\r\n\r\n        /**\r\n         * TOOLS\r\n         */\r\n\r\n        brushEl.onclick =()=> {\r\n\r\n            GameConfig.IS_DRAWING_MODE = true;\r\n            GameConfig.IS_LINE_DRAWING = false;\r\n            this._toolsDestroy();\r\n            Brush.prototype.init(_stage);\r\n\r\n            colorEl.value = Brush.prototype.getColor();\r\n            sizeEl.value = Brush.prototype.getSize();\r\n            opacityEl.value = Brush.prototype.getOpacity();\r\n\r\n            colorEl.style.display = '';\r\n            $('_colorSpan').style.display = '';\r\n            sizeEl.style.display = '';\r\n            $('_sizeSpan').style.display = '';\r\n            opacityEl.style.display = '';\r\n            $('_opacitySpan').style.display = '';\r\n            zoomSlider.style.display = 'none';\r\n            $('_zoomSpan').style.display ='none';\r\n            lineTypeEl.style.display = 'none';\r\n        }\r\n\r\n        lineEl.onclick =()=> {\r\n\r\n            GameConfig.IS_DRAWING_MODE = false;\r\n            GameConfig.IS_LINE_DRAWING = true;\r\n            this._toolsDestroy();\r\n            LineDraw.prototype.init(_stage);\r\n\r\n            colorEl.value = LineDraw.prototype.getColor();\r\n            sizeEl.value = LineDraw.prototype.getSize();\r\n            opacityEl.value = LineDraw.prototype.getOpacity();\r\n\r\n            lineTypeEl.style.display = '';\r\n\r\n            colorEl.style.display = '';\r\n            $('_colorSpan').style.display = '';\r\n            sizeEl.style.display = '';\r\n            $('_sizeSpan').style.display = '';\r\n            opacityEl.style.display = '';\r\n            $('_opacitySpan').style.display = '';\r\n            zoomSlider.style.display = 'none';\r\n            $('_zoomSpan').style.display ='none';\r\n        }\r\n\r\n        eraserEl.onclick =()=> {\r\n\r\n            GameConfig.IS_DRAWING_MODE = false;\r\n            GameConfig.IS_LINE_DRAWING = false;\r\n            this._toolsDestroy();\r\n            Eraser.prototype.init(_stage, _mainLayer);\r\n\r\n            sizeEl.value = Eraser.prototype.getSize();\r\n            opacityEl.value = Eraser.prototype.getOpacity();\r\n\r\n            colorEl.style.display = 'none';\r\n            $('_colorSpan').style.display = 'none';\r\n            sizeEl.style.display = '';\r\n            $('_sizeSpan').style.display = '';\r\n            opacityEl.style.display = '';\r\n            $('_opacitySpan').style.display = '';\r\n            zoomSlider.style.display = 'none';\r\n            $('_zoomSpan').style.display ='none';\r\n            lineTypeEl.style.display = 'none';\r\n        };\r\n\r\n        zoomEl.onclick =()=> {\r\n            // this._toolsDestroy();\r\n            Zoom.prototype.init(_stage);\r\n            zoomSlider.value = Zoom.prototype.getSize();\r\n\r\n            colorEl.style.display = 'none';\r\n            $('_colorSpan').style.display = 'none';\r\n            sizeEl.style.display = 'none';\r\n            $('_sizeSpan').style.display = 'none';\r\n            opacityEl.style.display = 'none';\r\n            $('_opacitySpan').style.display = 'none';\r\n\r\n            zoomSlider.style.display = '';\r\n            $('_zoomSpan').style.display = '';\r\n            lineTypeEl.style.display = 'none';\r\n\r\n        }\r\n\r\n        clearEl.onclick = ()=> {\r\n            // ClearCanvas.prototype.canvasClear(_canvas);\r\n            // _mainLayer.clear();\r\n            // this._toolsDestroy();\r\n            // GameConfig.MAIN_LAYER.find('Line').destroy();\r\n            // GameConfig.MAIN_LAYER.draw();\r\n            // _stage.remove(_mainLayer);\r\n\r\n            lineTypeEl.style.display = 'none';\r\n\r\n            this._toolsDestroy();\r\n\r\n            _stage.remove(GameConfig.MAIN_LAYER);\r\n            // GameConfig.MAIN_LAYER.clear();\r\n            if(GameConfig.MAIN_LAYER)\r\n            {\r\n                GameConfig.MAIN_LAYER.remove();\r\n                GameConfig.MAIN_LAYER.destroy();\r\n                GameConfig.MAIN_LAYER = null;\r\n            }\r\n\r\n            if(GameConfig.CURRENT_LAYER)\r\n            {\r\n                _stage.remove(GameConfig.CURRENT_LAYER);\r\n                GameConfig.CURRENT_LAYER.clear();\r\n                GameConfig.CURRENT_LAYER.remove();\r\n                GameConfig.CURRENT_LAYER.destroy();\r\n                GameConfig.CURRENT_LAYER = null;\r\n            }\r\n\r\n\r\n            _mainLayer = new Konva.Layer();\r\n            _stage.add(_mainLayer);\r\n            GameConfig.MAIN_LAYER = _mainLayer;\r\n            _mainLayer.draw();\r\n            // console.log(_mainLayer)\r\n            // _stage.remove(_mainLayer)\r\n            // GameConfig.MAIN_LAYER.visible(false);\r\n\r\n            // GameConfig.MAIN_LAYER.destroy();\r\n            // console.log(\"clear\", _stage, GameConfig.MAIN_LAYER)\r\n        };\r\n\r\n        moveEl.onclick = ()=> {\r\n            lineTypeEl.style.display = 'none';\r\n            this._toolsDestroy();\r\n            Move.prototype.move(_stage);\r\n        };\r\n\r\n\r\n        this._default();\r\n\r\n    }\r\n\r\n    _default() {\r\n        Brush.prototype.init(_stage);\r\n        colorEl.value = Brush.prototype.getColor();\r\n        sizeEl.value = Brush.prototype.getSize();\r\n        opacityEl.value = Brush.prototype.getOpacity();\r\n    }\r\n\r\n\r\n\r\n    _toolsDestroy() {\r\n        if(GameConfig.CURRENT_TOOL) GameConfig.CURRENT_TOOL.destroy();\r\n    }\r\n\r\n    rgbToHex(r,g,b) {\r\n\r\n        let rgbToHex = (r, g, b) => '#' + [r, g, b].map(x => {\r\n            const hex = x.toString(16)\r\n            return hex.length === 1 ? '0' + hex : hex\r\n        }).join('');\r\n\r\n        console.log(rgbToHex)\r\n    }\r\n\r\n    hexToRgb(hex) {\r\n        console.log(\"A\")\r\n        hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i\r\n            ,(m, r, g, b) => '#' + r + r + g + g + b + b)\r\n            .substring(1).match(/.{2}/g)\r\n            .map(x => parseInt(x, 16))\r\n\r\n        console.log(hex);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/sketchBook/SketchBookKonva.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this, isPaint, _line;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\nconst _dashConfigArr = [[0,0], [0, 0, 15], [0, 10]];\r\nlet _lineType = _dashConfigArr[0];\r\nexport default class LineDraw {\r\n\r\n    init(stage) {\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer;\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n\r\n        this.useTool();\r\n    }\r\n\r\n    useTool() {\r\n        _stage.on('mousedown touchstart', function () {\r\n            isPaint = true;\r\n            let pos = _stage.getPointerPosition();\r\n\r\n            _line = new Konva.Line({\r\n                points: [pos.x, pos.y, pos.x, pos.y],\r\n                // pointerLength: 20,\r\n                // pointerWidth: 20,\r\n                lineCap:'round',\r\n                opacity:_this.getOpacity() / 100,\r\n                stroke: _this.getColor(),\r\n                strokeWidth: _this.getSize(),\r\n                dashEnabled:`true`,\r\n                dash:_this.getLineType()\r\n            });\r\n            _drawLayer.add(_line);\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', function () {\r\n            isPaint = false;\r\n\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', function () {\r\n            if(!GameConfig.IS_LINE_DRAWING) return;\r\n            if (!isPaint) {\r\n                return;\r\n            }\r\n\r\n            let pos = _stage.getPointerPosition();\r\n            let oldPoints = _line.points();\r\n            _line.points([oldPoints[0], oldPoints[1], pos.x, pos.y])\r\n            _drawLayer.draw();\r\n        });\r\n    }\r\n\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        isPaint = false;\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    /**\r\n     *\r\n     * @param linType\r\n     */\r\n    setLineType(num) { _lineType = _dashConfigArr[num];}\r\n    getLineType() { return _lineType;}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/LineDraw.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\n\r\n\r\nexport default class Brush {\r\n\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer;\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n\r\n        this.useTool();\r\n\r\n    }\r\n\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n        let currentLine;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            // Start drawing\r\n            isDrawing = true;\r\n            // Create new line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            currentLine = new Konva.Line({\r\n                stroke: _this.getColor(),\r\n                strokeWidth: _this.getSize(),\r\n                points: [pos.x, pos.y],\r\n                // globalCompositeOperation:'source-over',\r\n                // globalCompositeOperation:'destination-out',\r\n                // lineCap:'square',\r\n                lineCap:'round',\r\n                tension:GameConfig.DEFAULT_TENSION,\r\n                // fill:'#ffcc00',\r\n                // fillPatternImage:'asset/image/starImg.png',\r\n                // fillEnabled:true,\r\n                opacity:_this.getOpacity() / 100\r\n            });\r\n\r\n            _drawLayer.add(currentLine);\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            if (!isDrawing) {\r\n                return;\r\n            }\r\n\r\n            // If drawing, add new point to the current line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            let newPoints = currentLine.points().concat([pos.x, pos.y]);\r\n            currentLine.points(newPoints);\r\n            _drawLayer.batchDraw();\r\n\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            isDrawing = false;\r\n            // currentLine.node.destroy();\r\n            // console.log(currentLine)\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        transform.invert();\r\n\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n\r\n        // console.log('brush', _drawLayer);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    pattern() {\r\n        // get fill pattern image\r\n        let shape\r\n        let fillPatternImage = shape.fillPatternImage();\r\n\r\n// set fill pattern image\r\n        let imageObj = new Image();\r\n        imageObj.onload = function() {\r\n            shape.fillPatternImage(imageObj);\r\n        };\r\n        imageObj.src = 'path/to/image/jpg';\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Brush.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\n\r\n\r\nexport default class Airbrush {\r\n\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer;\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n\r\n        this.useTool();\r\n\r\n    }\r\n\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n        let currentLine;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            // Start drawing\r\n            isDrawing = true;\r\n            // Create new line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            currentLine = new Konva.Line({\r\n                stroke: _this.getColor(),\r\n                strokeWidth: _this.getSize(),\r\n                points: [pos.x, pos.y],\r\n                // globalCompositeOperation:'source-over',\r\n                // globalCompositeOperation:'destination-out',\r\n                // lineCap:'square',\r\n                lineCap:'round',\r\n                tension:GameConfig.DEFAULT_TENSION,\r\n                // fill:'#ffcc00',\r\n                // fillPatternImage:'asset/image/starImg.png',\r\n                // fillEnabled:true,\r\n                opacity:_this.getOpacity() / 100\r\n            });\r\n\r\n            _drawLayer.add(currentLine);\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            if (!isDrawing) {\r\n                return;\r\n            }\r\n\r\n            // If drawing, add new point to the current line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            let newPoints = currentLine.points().concat([pos.x, pos.y]);\r\n            currentLine.points(newPoints);\r\n            this.imageDraw(pos.x, pos.y);\r\n            _drawLayer.batchDraw();\r\n\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            isDrawing = false;\r\n            // currentLine.node.destroy();\r\n            // console.log(currentLine)\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        transform.invert();\r\n\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n\r\n    imageDraw(x, y) {\r\n\r\n        let xPos = 0\r\n        let currentLine = new Konva.RegularPolygon({\r\n            // x: stage.width() / 2,\r\n            // y: stage.height() / 2,\r\n            x:x,\r\n            y:y,\r\n            sides: 3,\r\n            radius: 10,\r\n            fill: 'red',\r\n            stroke: 'black',\r\n            strokeWidth: 20,\r\n            lineJoin: 'bevel',\r\n        });\r\n        _drawLayer.add(currentLine);\r\n        _drawLayer.batchDraw();\r\n\r\n    }\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n\r\n        // console.log('brush', _drawLayer);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    pattern() {\r\n        // get fill pattern image\r\n        let shape\r\n        let fillPatternImage = shape.fillPatternImage();\r\n\r\n// set fill pattern image\r\n        let imageObj = new Image();\r\n        imageObj.onload = function() {\r\n            shape.fillPatternImage(imageObj);\r\n        };\r\n        imageObj.src = 'path/to/image/jpg';\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Airbrush.js","import GameConfig from \"../data/GameConfig\";\r\nimport LayerManager from \"../manager/LayerManager\";\r\n\r\nlet _stage, _drawLayer, _this;\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\n\r\n\r\nexport default class Crayon {\r\n\r\n    init(stage) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = new Konva.Layer;\r\n        _stage.add(_drawLayer);\r\n        GameConfig.CURRENT_LAYER = _drawLayer;\r\n        _this = this;\r\n\r\n        this.useTool();\r\n\r\n    }\r\n\r\n\r\n    useTool () {\r\n\r\n        let isDrawing = false;\r\n        let currentLine;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            // Start drawing\r\n            isDrawing = true;\r\n            // Create new line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            currentLine = new Konva.Line({\r\n                stroke: _this.getColor(),\r\n                strokeWidth: _this.getSize(),\r\n                points: [pos.x, pos.y],\r\n                // globalCompositeOperation:'source-over',\r\n                // globalCompositeOperation:'destination-out',\r\n                // lineCap:'square',\r\n                lineCap:'round',\r\n                tension:GameConfig.DEFAULT_TENSION,\r\n                // fill:'#ffcc00',\r\n                // fillPatternImage:'asset/image/starImg.png',\r\n                // fillEnabled:true,\r\n                opacity:_this.getOpacity() / 100\r\n            });\r\n\r\n            _drawLayer.add(currentLine);\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', (evt) => {\r\n            // if(!GameConfig.IS_DRAWING_MODE) return;\r\n            if (!isDrawing) {\r\n                return;\r\n            }\r\n\r\n            // If drawing, add new point to the current line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            let newPoints = currentLine.points().concat([pos.x, pos.y]);\r\n            currentLine.points(newPoints);\r\n            this.imageDraw(pos.x, pos.y);\r\n            _drawLayer.batchDraw();\r\n\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            isDrawing = false;\r\n            // currentLine.node.destroy();\r\n            // console.log(currentLine)\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        transform.invert();\r\n\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n\r\n    imageDraw(x, y) {\r\n\r\n        let xPos = 0\r\n        let currentLine = new Konva.RegularPolygon({\r\n            // x: stage.width() / 2,\r\n            // y: stage.height() / 2,\r\n            x:x,\r\n            y:y,\r\n            sides: 3,\r\n            radius: 10,\r\n            fill: 'red',\r\n            stroke: 'black',\r\n            strokeWidth: 20,\r\n            lineJoin: 'bevel',\r\n        });\r\n        _drawLayer.add(currentLine);\r\n        _drawLayer.batchDraw();\r\n\r\n    }\r\n    destroy () {\r\n        LayerManager.prototype.init(_drawLayer);\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n\r\n        // console.log('brush', _drawLayer);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n    pattern() {\r\n        // get fill pattern image\r\n        let shape\r\n        let fillPatternImage = shape.fillPatternImage();\r\n\r\n// set fill pattern image\r\n        let imageObj = new Image();\r\n        imageObj.onload = function() {\r\n            shape.fillPatternImage(imageObj);\r\n        };\r\n        imageObj.src = 'path/to/image/jpg';\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Crayon.js","import GameConfig from \"../data/GameConfig\";\r\n\r\nlet _stage, _this, _mode, _currentNum, _drawLayer, isDrawing;\r\nlet _lineArr = [];\r\nlet _color = GameConfig.DEFAULT_COLOR;\r\nlet _size = GameConfig.DEFAULT_LINE_SIZE;\r\nlet _opacity = GameConfig.DEFAULT_OPACITY;\r\n\r\nexport default class Eraser {\r\n\r\n\r\n    init(stage, drawLayer) {\r\n\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = drawLayer;\r\n        _this = this;\r\n\r\n        // _stage.add(_drawLayer);\r\n        this.useTool();\r\n\r\n    }\r\n\r\n    useTool () {\r\n        isDrawing = false;\r\n        let currentLine;\r\n        _stage.on('mousedown touchstart', (evt) => {\r\n            // Start drawing\r\n            isDrawing = true;\r\n            // Create new line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            currentLine = new Konva.Line({\r\n                stroke: _this.getColor(),\r\n                strokeWidth: _this.getSize(),\r\n                points: [pos.x, pos.y],\r\n                lineCap:'round',\r\n                tension:GameConfig.DEFAULT_TENSION,\r\n                opacity:_this.getOpacity() / 100,\r\n                globalCompositeOperation:'destination-out'\r\n            });\r\n            _drawLayer.add(currentLine);\r\n        });\r\n\r\n        _stage.on('mousemove touchmove', () => {\r\n            if (!isDrawing) {\r\n                return;\r\n            }\r\n\r\n            // If drawing, add new point to the current line object\r\n            let pos = this.getRelativePointerPosition(_stage);\r\n            let newPoints = currentLine.points().concat([pos.x, pos.y]);\r\n            currentLine.points(newPoints);\r\n            _drawLayer.batchDraw();\r\n        });\r\n\r\n        _stage.on('mouseup touchend contentTouchend', (evt) => {\r\n            // End drawing\r\n            isDrawing = false;\r\n        });\r\n    }\r\n\r\n    getRelativePointerPosition(node) {\r\n        // the function will return pointer position relative to the passed node\r\n        let transform = node.getAbsoluteTransform().copy();\r\n        // to detect relative position we need to invert transform\r\n        transform.invert();\r\n\r\n        // get pointer (say mouse or touch) position\r\n        let pos = node.getStage().getPointerPosition();\r\n\r\n        // now we find relative point\r\n        return transform.point(pos);\r\n    }\r\n\r\n    destroy() {\r\n        // console.log(\"eraseEND\")\r\n        if(_stage)_stage.off('mousedown touchstart');\r\n        if(_stage)_stage.off('mousemove touchmove');\r\n        if(_stage)_stage.off('mouseup touchend contentTouchend');\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param color\r\n     */\r\n    setColor(color) { _color = color;}\r\n    getColor() { return _color;}\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(size) { _size = size;}\r\n    getSize() { return _size;}\r\n\r\n    /**\r\n     *\r\n     * @param opacity\r\n     */\r\n    setOpacity(opacity) { _opacity = opacity;}\r\n    getOpacity() { return _opacity;}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Eraser.js","import GameConfig from \"../data/GameConfig\";\r\n\r\nconst _defaultViewPort = 1;\r\nconst _minimumViewPort = 50;\r\nconst _maximumViewPort = 200;\r\nlet _currentViewPort = 100;\r\nlet _canvas, _stage, _drawLayer, _this;\r\nexport default class Zoom {\r\n\r\n    init(stage, drawLayer) {\r\n        GameConfig.CURRENT_TOOL = this;\r\n        _stage = stage;\r\n        _drawLayer = drawLayer;\r\n        _this = this;\r\n        // _stage.add(_drawLayer);\r\n    }\r\n\r\n\r\n    sizeChange(num) {\r\n\r\n        // _canvas.zoomToPoint({ x: _canvas.width/2, y: _canvas.height/2 }, this.getSize() * 0.01);\r\n\r\n        // let scaleBy = 1.01;\r\n       /* let scaleBy = num;\r\n        let oldScale = _stage.scaleX();\r\n\r\n        // let pointer = _stage.getPointerPosition();\r\n\r\n        let mousePointTo = {\r\n            x: (pointer.x - _stage.x()) / oldScale,\r\n            y: (pointer.y - _stage.y()) / oldScale,\r\n        };\r\n\r\n        let newScale =\r\n            e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n\r\n        _stage.scale({ x: newScale, y: newScale });\r\n\r\n        let newPos = {\r\n            x: pointer.x - mousePointTo.x * newScale,\r\n            y: pointer.y - mousePointTo.y * newScale,\r\n        };\r\n        */\r\n\r\n        // _stage.scale({ x: num/100, y: num/100 });\r\n        _stage.scale({ x: this.getSize(), y: this.getSize() });\r\n\r\n        // _stage.position(newPos);\r\n        _stage.batchDraw();\r\n    }\r\n\r\n    sizeSetMouseWheel() {\r\n        /*canvas.on('mouse:wheel', function(opt) {\r\n         let delta = opt.e.deltaY;\r\n         let zoom = canvas.getZoom();\r\n         zoom *= 0.999 ** delta;\r\n         if (zoom > 20) zoom = 20;\r\n         if (zoom < 0.01) zoom = 0.01;\r\n         canvas.setZoom(zoom);\r\n         opt.e.preventDefault();\r\n         opt.e.stopPropagation();\r\n     })*/\r\n        // _canvas.setZoom(this.getSize() * 0.01);\r\n    }\r\n\r\n    destroy() {\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param size\r\n     */\r\n    setSize(point) {\r\n        // console.log(point)\r\n        // if(_currentViewPort >= _minimumViewPort && _currentViewPort <= _maximumViewPort)\r\n        // _currentViewPort = point;\r\n        _currentViewPort = point/100;\r\n    }\r\n    getSize() { return _currentViewPort;}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Zoom.js","export default class ClearCanvas {\r\n    canvasClear(canvas) {\r\n        // alert(\"are you sure?\");\r\n        canvas.clear();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/ClearCanvas.js","import GameConfig from \"../data/GameConfig\";\r\n\r\nlet _canvas, _stage;\r\nexport default class Move {\r\n    move (stage) {\r\n        GameConfig.IS_DRAWING_MODE = false;\r\n        _stage = stage;\r\n        _stage.draggable(true);\r\n\r\n        let scaleBy = 1.3;\r\n        _stage.on('wheel', (evt) => {\r\n            evt.evt.preventDefault();\r\n            let oldScale = _stage.scaleX();\r\n\r\n            let mousePointTo = {\r\n                x: _stage.getPointerPosition().x / oldScale - _stage.x() / oldScale,\r\n                y: _stage.getPointerPosition().y / oldScale - _stage.y() / oldScale\r\n            };\r\n\r\n            let newScale = evt.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n            _stage.scale({x: newScale, y: newScale});\r\n\r\n            let newPos = {\r\n                x: -(mousePointTo.x - _stage.getPointerPosition().x / newScale) * newScale,\r\n                y: -(mousePointTo.y - _stage.getPointerPosition().y / newScale) * newScale\r\n            };\r\n            _stage.position(newPos);\r\n            _stage.batchDraw();\r\n        });\r\n    }\r\n\r\n    destroy () {\r\n        if(_stage) _stage.draggable(false);\r\n        if(_stage) _stage.off('wheel');\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/module/Move.js"],"sourceRoot":""}